/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Directive, Input, Host, Self, Optional, ElementRef } from '@angular/core';
import { IonContent } from '@ionic/angular';
import { HidenavShService } from './hidenav-sh-service.service';
import $ from 'jquery';
var HidenavShContentDirective = /** @class */ (function () {
    function HidenavShContentDirective(el, contentElem, globals) {
        this.el = el;
        this.contentElem = contentElem;
        this.globals = globals;
    }
    /**
     * @return {?}
     */
    HidenavShContentDirective.prototype.ngAfterViewInit = /**
     * @return {?}
     */
    function () {
        var _this = this;
        if (!this.contentElem.nativeElement.hasAttribute('hidenav-tabspage')) {
            this.name = this.globals.requestName();
            $(this.contentElem.nativeElement).attr('hidenav-sh-content', this.name);
            $('hidenav-stretchheader', $(this.contentElem.nativeElement).parents().get().find((/**
             * @param {?} itm
             * @return {?}
             */
            function (itm) { return $(itm).find('[hidenav-header]').length; }))).attr('hidenav-sh-header', this.name);
            this.start();
        }
        else {
            /** @type {?} */
            var counter_1 = 0;
            /** @type {?} */
            var int_1 = setInterval((/**
             * @return {?}
             */
            function () {
                /** @type {?} */
                var x = $(_this.contentElem.nativeElement).closest('[hidenav-sh-tabscontent]').attr('hidenav-sh-tabscontent');
                counter_1++;
                if (x && x.length > 0) {
                    _this.parent = $(_this.contentElem.nativeElement).closest('[hidenav-sh-tabscontent]').attr('hidenav-sh-tabscontent');
                    _this.name = _this.globals.requestTabName(_this.parent);
                    $(_this.contentElem.nativeElement).attr('hidenav-sh-content', _this.name);
                    $(_this.contentElem.nativeElement).attr('hidenav-tabspage', _this.parent);
                    _this.start();
                    clearInterval(int_1);
                }
                else if (counter_1 > 50) {
                    clearInterval(int_1);
                }
            }), 50);
        }
    };
    /**
     * @return {?}
     */
    HidenavShContentDirective.prototype.start = /**
     * @return {?}
     */
    function () {
        if (this.name) {
            if (typeof this.globals.data[this.name] == 'undefined' || this.globals.data[this.name] == null)
                this.globals.data[this.name] = [];
            this.globals.data[this.name].content = this.el;
            this.globals.data[this.name].contentEl = this.contentElem;
            if (this.parent)
                this.globals.data[this.name].parent = this.parent;
            this.globals.initiate(this.name);
        }
    };
    /**
     * @return {?}
     */
    HidenavShContentDirective.prototype.ngOnDestroy = /**
     * @return {?}
     */
    function () {
        if (this.name) {
            delete this.globals.data[this.name].content;
        }
    };
    HidenavShContentDirective.decorators = [
        { type: Directive, args: [{
                    selector: '[hidenav-sh-content]'
                },] }
    ];
    HidenavShContentDirective.ctorParameters = function () { return [
        { type: IonContent, decorators: [{ type: Host }, { type: Self }, { type: Optional }] },
        { type: ElementRef },
        { type: HidenavShService }
    ]; };
    HidenavShContentDirective.propDecorators = {
        hntb: [{ type: Input, args: ['hidenav-tabspage',] }]
    };
    return HidenavShContentDirective;
}());
export { HidenavShContentDirective };
if (false) {
    /** @type {?} */
    HidenavShContentDirective.prototype.parent;
    /** @type {?} */
    HidenavShContentDirective.prototype.name;
    /** @type {?} */
    HidenavShContentDirective.prototype.hntb;
    /** @type {?} */
    HidenavShContentDirective.prototype.el;
    /** @type {?} */
    HidenavShContentDirective.prototype.contentElem;
    /**
     * @type {?}
     * @private
     */
    HidenavShContentDirective.prototype.globals;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaGlkZW5hdi1zaC1jb250ZW50LmRpcmVjdGl2ZS5qcyIsInNvdXJjZVJvb3QiOiJuZzovL2lvbmljNC1oaWRlbmF2LyIsInNvdXJjZXMiOlsibGliL2hpZGVuYXYtc2gtY29udGVudC5kaXJlY3RpdmUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBQyxTQUFTLEVBQUUsS0FBSyxFQUFFLElBQUksRUFBRSxJQUFJLEVBQUUsUUFBUSxFQUFFLFVBQVUsRUFBQyxNQUFNLGVBQWUsQ0FBQztBQUNqRixPQUFPLEVBQUMsVUFBVSxFQUFDLE1BQU0sZ0JBQWdCLENBQUM7QUFDMUMsT0FBTyxFQUFDLGdCQUFnQixFQUFDLE1BQU0sOEJBQThCLENBQUM7QUFDOUQsT0FBTyxDQUFDLE1BQU0sUUFBUSxDQUFDO0FBRXZCO0lBVUksbUNBQWdELEVBQWMsRUFBUyxXQUF1QixFQUFVLE9BQXlCO1FBQWpGLE9BQUUsR0FBRixFQUFFLENBQVk7UUFBUyxnQkFBVyxHQUFYLFdBQVcsQ0FBWTtRQUFVLFlBQU8sR0FBUCxPQUFPLENBQWtCO0lBRWpJLENBQUM7Ozs7SUFFRCxtREFBZTs7O0lBQWY7UUFBQSxpQkF1QkM7UUF0QkcsSUFBRyxDQUFDLElBQUksQ0FBQyxXQUFXLENBQUMsYUFBYSxDQUFDLFlBQVksQ0FBQyxrQkFBa0IsQ0FBQyxFQUFDO1lBQ2hFLElBQUksQ0FBQyxJQUFJLEdBQUcsSUFBSSxDQUFDLE9BQU8sQ0FBQyxXQUFXLEVBQUUsQ0FBQztZQUN2QyxDQUFDLENBQUMsSUFBSSxDQUFDLFdBQVcsQ0FBQyxhQUFhLENBQUMsQ0FBQyxJQUFJLENBQUMsb0JBQW9CLEVBQUUsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDO1lBQ3hFLENBQUMsQ0FBQyx1QkFBdUIsRUFBRSxDQUFDLENBQUMsSUFBSSxDQUFDLFdBQVcsQ0FBQyxhQUFhLENBQUMsQ0FBQyxPQUFPLEVBQUUsQ0FBQyxHQUFHLEVBQUUsQ0FBQyxJQUFJOzs7O1lBQUMsVUFBQSxHQUFH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QUFDO29CQUNULFFBQVEsRUFBRSxzQkFBc0I7aUJBQ2pDOzs7Z0JBTk8sVUFBVSx1QkFjQSxJQUFJLFlBQUksSUFBSSxZQUFJLFFBQVE7Z0JBZk0sVUFBVTtnQkFFbEQsZ0JBQWdCOzs7dUJBV25CLEtBQUssU0FBQyxrQkFBa0I7O0lBa0Q3QixnQ0FBQztDQUFBLEFBMURELElBMERDO1NBdkRZLHlCQUF5Qjs7O0lBRWxDLDJDQUFZOztJQUNaLHlDQUFVOztJQUVWLHlDQUFxQzs7SUFFeEIsdUNBQWlEOztJQUFFLGdEQUE4Qjs7Ozs7SUFBRSw0Q0FBaUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge0RpcmVjdGl2ZSwgSW5wdXQsIEhvc3QsIFNlbGYsIE9wdGlvbmFsLCBFbGVtZW50UmVmfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7SW9uQ29udGVudH0gZnJvbSAnQGlvbmljL2FuZ3VsYXInO1xuaW1wb3J0IHtIaWRlbmF2U2hTZXJ2aWNlfSBmcm9tICcuL2hpZGVuYXYtc2gtc2VydmljZS5zZXJ2aWNlJztcbmltcG9ydCAkIGZyb20gJ2pxdWVyeSc7XG5cbkBEaXJlY3RpdmUoe1xuICBzZWxlY3RvcjogJ1toaWRlbmF2LXNoLWNvbnRlbnRdJ1xufSlcbmV4cG9ydCBjbGFzcyBIaWRlbmF2U2hDb250ZW50RGlyZWN0aXZlIHtcblxuICAgIHBhcmVudDogYW55O1xuICAgIG5hbWU6IGFueTtcblxuICAgIEBJbnB1dCgnaGlkZW5hdi10YWJzcGFnZScpIGhudGI6IGFueTtcblxuICAgIGNvbnN0cnVjdG9yKCBASG9zdCgpIEBTZWxmKCkgQE9wdGlvbmFsKCkgcHVibGljIGVsOiBJb25Db250ZW50LCBwdWJsaWMgY29udGVudEVsZW06IEVsZW1lbnRSZWYsIHByaXZhdGUgZ2xvYmFsczogSGlkZW5hdlNoU2VydmljZSkge1xuXG4gICAgfVxuXG4gICAgbmdBZnRlclZpZXdJbml0KCkge1xuICAgICAgICBpZighdGhpcy5jb250ZW50RWxlbS5uYXRpdmVFbGVtZW50Lmhhc0F0dHJpYnV0ZSgnaGlkZW5hdi10YWJzcGFnZScpKXtcbiAgICAgICAgICAgIHRoaXMubmFtZSA9IHRoaXMuZ2xvYmFscy5yZXF1ZXN0TmFtZSgpO1xuICAgICAgICAgICAgJCh0aGlzLmNvbnRlbnRFbGVtLm5hdGl2ZUVsZW1lbnQpLmF0dHIoJ2hpZGVuYXYtc2gtY29udGVudCcsIHRoaXMubmFtZSk7XG4gICAgICAgICAgICAkKCdoaWRlbmF2LXN0cmV0Y2hoZWFkZXInLCAkKHRoaXMuY29udGVudEVsZW0ubmF0aXZlRWxlbWVudCkucGFyZW50cygpLmdldCgpLmZpbmQoaXRtID0+ICQoaXRtKS5maW5kKCdbaGlkZW5hdi1oZWFkZXJdJykubGVuZ3RoKSkuYXR0cignaGlkZW5hdi1zaC1oZWFkZXInLCB0aGlzLm5hbWUpO1xuICAgICAgICAgICAgdGhpcy5zdGFydCgpO1xuICAgICAgICB9ZWxzZXtcbiAgICAgICAgICAgIGxldCBjb3VudGVyID0gMDtcbiAgICAgICAgICAgIGxldCBpbnQgPSBzZXRJbnRlcnZhbCgoKSA9PiB7XG4gICAgICAgICAgICAgICAgbGV0IHggPSAkKHRoaXMuY29udGVudEVsZW0ubmF0aXZlRWxlbWVudCkuY2xvc2VzdCgnW2hpZGVuYXYtc2gtdGFic2NvbnRlbnRdJykuYXR0cignaGlkZW5hdi1zaC10YWJzY29udGVudCcpO1xuICAgICAgICAgICAgICAgIGNvdW50ZXIrKztcbiAgICAgICAgICAgICAgICBpZih4ICYmIHgubGVuZ3RoID4gMCl7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMucGFyZW50ID0gJCh0aGlzLmNvbnRlbnRFbGVtLm5hdGl2ZUVsZW1lbnQpLmNsb3Nlc3QoJ1toaWRlbmF2LXNoLXRhYnNjb250ZW50XScpLmF0dHIoJ2hpZGVuYXYtc2gtdGFic2NvbnRlbnQnKTtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5uYW1lID0gdGhpcy5nbG9iYWxzLnJlcXVlc3RUYWJOYW1lKHRoaXMucGFyZW50KTtcbiAgICAgICAgICAgICAgICAgICAgJCh0aGlzLmNvbnRlbnRFbGVtLm5hdGl2ZUVsZW1lbnQpLmF0dHIoJ2hpZGVuYXYtc2gtY29udGVudCcsIHRoaXMubmFtZSk7XG4gICAgICAgICAgICAgICAgICAgICQodGhpcy5jb250ZW50RWxlbS5uYXRpdmVFbGVtZW50KS5hdHRyKCdoaWRlbmF2LXRhYnNwYWdlJywgdGhpcy5wYXJlbnQpO1xuICAgICAgICAgICAgICAgICAgICB0aGlzLnN0YXJ0KCk7XG4gICAgICAgICAgICAgICAgICAgIGNsZWFySW50ZXJ2YWwoaW50KTtcbiAgICAgICAgICAgICAgICB9ZWxzZSBpZihjb3VudGVyID4gNTApe1xuICAgICAgICAgICAgICAgICAgICBjbGVhckludGVydmFsKGludCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSwgNTApXG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBzdGFydCgpIHtcbiAgICAgICAgaWYodGhpcy5uYW1lKSB7XG4gICAgICAgICAgICBpZiAodHlwZW9mIHRoaXMuZ2xvYmFscy5kYXRhW3RoaXMubmFtZV0gPT0gJ3VuZGVmaW5lZCcgfHwgdGhpcy5nbG9iYWxzLmRhdGFbdGhpcy5uYW1lXSA9PSBudWxsKVxuICAgICAgICAgICAgICAgIHRoaXMuZ2xvYmFscy5kYXRhW3RoaXMubmFtZV0gPSBbXTtcbiAgICAgICAgICAgIHRoaXMuZ2xvYmFscy5kYXRhW3RoaXMubmFtZV0uY29udGVudCA9IHRoaXMuZWw7XG4gICAgICAgICAgICB0aGlzLmdsb2JhbHMuZGF0YVt0aGlzLm5hbWVdLmNvbnRlbnRFbCA9IHRoaXMuY29udGVudEVsZW07XG4gICAgICAgICAgICBpZih0aGlzLnBhcmVudClcbiAgICAgICAgICAgICAgICB0aGlzLmdsb2JhbHMuZGF0YVt0aGlzLm5hbWVdLnBhcmVudCA9IHRoaXMucGFyZW50O1xuICAgICAgICAgICAgdGhpcy5nbG9iYWxzLmluaXRpYXRlKHRoaXMubmFtZSk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgICAgIFxuICAgIFxuICAgIG5nT25EZXN0cm95KCkge1xuICAgICAgICBpZih0aGlzLm5hbWUpIHtcbiAgICAgICAgICAgIGRlbGV0ZSB0aGlzLmdsb2JhbHMuZGF0YVt0aGlzLm5hbWVdLmNvbnRlbnQ7XG4gICAgICAgIH1cbiAgICB9XG5cbn1cbiJdfQ==