/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { Injectable } from '@angular/core';
import * as i0 from "@angular/core";
var HidenavService = /** @class */ (function () {
    function HidenavService() {
        this.data = [];
        this.names = [];
        this.tabnames = [];
    }
    /**
     * @return {?}
     */
    HidenavService.prototype.requestName = /**
     * @return {?}
     */
    function () {
        /** @type {?} */
        var name = 'page' + this.names.length;
        this.names.push(name);
        return name;
    };
    /**
     * @param {?} name
     * @return {?}
     */
    HidenavService.prototype.requestTabName = /**
     * @param {?} name
     * @return {?}
     */
    function (name) {
        if (!this.tabnames[name])
            this.tabnames[name] = [];
        /** @type {?} */
        var tabname = name + 'tab' + this.tabnames[name].length;
        this.tabnames[name].push(tabname);
        return tabname;
    };
    /**
     * @param {?} name
     * @return {?}
     */
    HidenavService.prototype.initiate = /**
     * @param {?} name
     * @return {?}
     */
    function (name) {
        var e_1, _a;
        /** @type {?} */
        var names = [];
        for (var key in this.data) {
            if (this.data[key].parent == name)
                names.push(key);
        }
        try {
            for (var names_1 = tslib_1.__values(names), names_1_1 = names_1.next(); !names_1_1.done; names_1_1 = names_1.next()) {
                var name_1 = names_1_1.value;
                this.initiate2(name_1);
            }
        }
        catch (e_1_1) { e_1 = { error: e_1_1 }; }
        finally {
            try {
                if (names_1_1 && !names_1_1.done && (_a = names_1.return)) _a.call(names_1);
            }
            finally { if (e_1) throw e_1.error; }
        }
        if (names.length == 0)
            this.initiate2(name);
    };
    /**
     * @param {?} name
     * @return {?}
     */
    HidenavService.prototype.initiate2 = /**
     * @param {?} name
     * @return {?}
     */
    function (name) {
        var _this = this;
        if (!(this.data[name] && (this.data[name].parent && this.data[this.data[name].parent].tabscontent && this.data[name].content && this.data[this.data[name].parent].header) || (!this.data[name].parent && this.data[name].content && this.data[name].header)))
            return false;
        /** @type {?} */
        var parent = this.data[name].parent;
        /** @type {?} */
        var content = this.data[name].content;
        /** @type {?} */
        var contentElem = this.data[name].contentElem;
        if (this.data[name].scrollTop == null)
            this.data[name].scrollTop = 0;
        if (this.data[name].lastscroll == null)
            this.data[name].lastscroll = 0;
        if (this.data[name].direction == null)
            this.data[name].direction = '';
        if (this.data[name].tapping == null)
            this.data[name].tapping = false;
        content.scrollEvents = true;
        if (!parent) {
            /** @type {?} */
            var header_1 = this.data[name].header;
            setTimeout((/**
             * @return {?}
             */
            function () {
                _this.data[name].navheight = _this.data[name].header.nativeElement.offsetHeight;
                /** @type {?} */
                var scrollContent = contentElem.nativeElement.shadowRoot.querySelector('.inner-scroll');
                _this.data[name].paddingTop = parseInt(window.getComputedStyle(scrollContent)['padding-top'], 10);
                content.ionScroll.subscribe((/**
                 * @param {?} e
                 * @return {?}
                 */
                function (e) {
                    if (e.detail.scrollTop == 0) {
                        scrollContent.style.top = null;
                        scrollContent.style.paddingTop = _this.data[name].paddingTop + 'px';
                    }
                    else {
                        scrollContent.style.top = '-' + _this.data[name].navheight + 'px';
                        scrollContent.style.paddingTop = _this.data[name].paddingTop + _this.data[name].navheight + 'px';
                    }
                    if (scrollContent.scrollHeight > (scrollContent.clientHeight + 100)) {
                        _this.data[name].scrolling = true;
                        /** @type {?} */
                        var x = _this.data[name].lastscroll - e.detail.scrollTop;
                        _this.data[name].direction = x > 0 ? 'up' : 'down';
                        _this.data[name].lastscroll = e.detail.scrollTop;
                        _this.data[name].scrollTop = _this.data[name].scrollTop - x;
                        if (_this.data[name].scrollTop > _this.data[name].navheight)
                            _this.data[name].scrollTop = _this.data[name].navheight;
                        if (_this.data[name].scrollTop < 0)
                            _this.data[name].scrollTop = 0;
                        header_1.nativeElement.style.transform = 'translate3d(0, ' + -_this.data[name].scrollTop + 'px, 0)';
                    }
                }));
                content.ionScrollEnd.subscribe((/**
                 * @return {?}
                 */
                function () {
                    setTimeout((/**
                     * @return {?}
                     */
                    function () {
                        //catch the last tick
                        if (scrollContent.scrollTop == 0) {
                            scrollContent.style.top = null;
                            scrollContent.style.paddingTop = _this.data[name].paddingTop + 'px';
                        }
                        _this.data[name].scrolling = false;
                        _this.c(name);
                    }), 10);
                }));
            }), 100);
            contentElem.nativeElement.addEventListener('touchend', (/**
             * @return {?}
             */
            function () {
                _this.data[name].tapping = false;
                _this.c(name);
            }));
            contentElem.nativeElement.addEventListener('touchstart', (/**
             * @return {?}
             */
            function () { return _this.data[name].tapping = true; }));
        }
        else if (parent) {
            /** @type {?} */
            var header_2 = this.data[parent].header;
            /** @type {?} */
            var tabscontentElem_1 = this.data[parent].tabscontentElem;
            /** @type {?} */
            var supertabsToolbar_1 = tabscontentElem_1.nativeElement.querySelector('super-tabs-toolbar');
            setTimeout((/**
             * @return {?}
             */
            function () {
                _this.data[parent].tabscontentHeight = tabscontentElem_1.nativeElement.scrollHeight;
                /** @type {?} */
                var scrollContent = contentElem.nativeElement.shadowRoot.querySelector('.inner-scroll');
                /** @type {?} */
                var tabsscrollContent = _this.data[parent].tabscontentElem.nativeElement.shadowRoot.querySelector('.inner-scroll');
                if (scrollContent.scrollHeight > (scrollContent.clientHeight + 100)) {
                    _this.data[name].navheight = _this.data[parent].header.nativeElement.offsetHeight;
                    _this.data[name].paddingTop = parseInt(window.getComputedStyle(scrollContent)['padding-top'], 10);
                }
                content.ionScroll.subscribe((/**
                 * @param {?} e
                 * @return {?}
                 */
                function (e) {
                    if (_this.data[name].tapping && scrollContent.scrollHeight > (scrollContent.clientHeight + 100)) {
                        if (e.detail.scrollTop == 0) {
                            supertabsToolbar_1.style.position = 'static';
                            scrollContent.style.paddingTop = _this.data[name].paddingTop + 'px';
                            tabscontentElem_1.nativeElement.style.top = null;
                            tabsscrollContent.style.height = _this.data[parent].tabscontentHeight + 'px';
                            tabscontentElem_1.nativeElement.style.top = null;
                        }
                        else {
                            /** @type {?} */
                            var s = e.detail.scrollTop;
                            supertabsToolbar_1.style.position = 'absolute';
                            supertabsToolbar_1.style.top = _this.data[name].navheight + 'px';
                            tabsscrollContent.style.height = (_this.data[parent].tabscontentHeight + _this.data[name].navheight) + 'px';
                            tabscontentElem_1.nativeElement.style.top = '-' + _this.data[name].navheight + 'px';
                            scrollContent.style.paddingTop = _this.data[name].paddingTop + supertabsToolbar_1.clientHeight + _this.data[name].navheight + 'px';
                            scrollContent.scrollTop = s;
                        }
                    }
                    _this.data[name].scrolling = true;
                    /** @type {?} */
                    var x = _this.data[name].lastscroll - e.detail.scrollTop;
                    _this.data[name].direction = x > 0 ? 'up' : 'down';
                    _this.data[name].lastscroll = e.detail.scrollTop;
                    _this.data[name].scrollTop = _this.data[name].scrollTop - x;
                    if (_this.data[name].scrollTop > _this.data[name].navheight)
                        _this.data[name].scrollTop = _this.data[name].navheight;
                    if (_this.data[name].scrollTop < 0)
                        _this.data[name].scrollTop = 0;
                    header_2.nativeElement.style.transform = 'translate3d(0, ' + -_this.data[name].scrollTop + 'px, 0)';
                    supertabsToolbar_1.style.transform = 'translate3d(0, ' + -_this.data[name].scrollTop + 'px, 0)';
                }));
                content.ionScrollEnd.subscribe((/**
                 * @return {?}
                 */
                function () {
                    setTimeout((/**
                     * @return {?}
                     */
                    function () {
                        //catch the last tick
                        if (scrollContent.scrollTop == 0) {
                            supertabsToolbar_1.style.position = 'static';
                            scrollContent.style.paddingTop = _this.data[name].paddingTop + 'px';
                            tabscontentElem_1.nativeElement.style.top = null;
                            tabsscrollContent.style.height = _this.data[parent].tabscontentHeight + 'px';
                            tabscontentElem_1.nativeElement.style.top = null;
                        }
                        _this.data[name].scrolling = false;
                        _this.c(name);
                    }), 10);
                }));
            }), 100);
            contentElem.nativeElement.addEventListener('touchend', (/**
             * @return {?}
             */
            function () {
                _this.data[name].tapping = false;
                _this.c(name);
            }));
            contentElem.nativeElement.addEventListener('touchstart', (/**
             * @return {?}
             */
            function () { return _this.data[name].tapping = true; }));
        }
    };
    /**
     * @private
     * @param {?} name
     * @return {?}
     */
    HidenavService.prototype.c = /**
     * @private
     * @param {?} name
     * @return {?}
     */
    function (name) {
        if (this.data[name].tapping || this.data[name].scrolling)
            return false;
        if (this.data[name].scrollTop == 0 || this.data[name].scrollTop == this.data[name].navheight)
            return false;
        /** @type {?} */
        var content = this.data[name].content;
        /** @type {?} */
        var scrollTopTemp = this.data[name].scrollTop;
        if (this.data[name].direction == 'down') {
            if (this.data[name].scrollTop < this.data[name].navheight) {
                content.scrollByPoint(0, (this.data[name].navheight - scrollTopTemp), (this.data[name].navheight - scrollTopTemp) * 6);
            }
        }
        else if (this.data[name].direction == 'up') {
            if (this.data[name].scrollTop < this.data[name].navheight) {
                content.scrollByPoint(0, -scrollTopTemp, scrollTopTemp * 6);
            }
        }
    };
    /**
     * @param {?} parent
     * @param {?} name
     * @return {?}
     */
    HidenavService.prototype.resetTabs = /**
     * @param {?} parent
     * @param {?} name
     * @return {?}
     */
    function (parent, name) {
        var _this = this;
        /** @type {?} */
        var header = this.data[parent].header;
        /** @type {?} */
        var tabscontentElem = this.data[parent].tabscontentElem;
        /** @type {?} */
        var supertabsToolbar = tabscontentElem.nativeElement.querySelector('super-tabs-toolbar');
        /** @type {?} */
        var tabsscrollContent = this.data[parent].tabscontentElem.nativeElement.shadowRoot.querySelector('.inner-scroll');
        /** @type {?} */
        var scrollContent = this.data[name].contentElem.nativeElement.shadowRoot.querySelector('.inner-scroll');
        scrollContent.scrollTop = scrollContent.scrollTop - this.data[name].scrollTop;
        setTimeout((/**
         * @return {?}
         */
        function () {
            if (scrollContent.scrollTop == 0) {
                supertabsToolbar.style.position = 'static';
                scrollContent.style.paddingTop = _this.data[name].paddingTop + 'px';
                tabscontentElem.nativeElement.style.top = null;
                tabsscrollContent.style.height = _this.data[parent].tabscontentHeight + 'px';
                tabscontentElem.nativeElement.style.top = null;
            }
            else {
                /** @type {?} */
                var s = scrollContent.scrollTop;
                supertabsToolbar.style.position = 'absolute';
                supertabsToolbar.style.top = _this.data[name].navheight + 'px';
                tabsscrollContent.style.height = (_this.data[parent].tabscontentHeight + _this.data[name].navheight) + 'px';
                tabscontentElem.nativeElement.style.top = '-' + _this.data[name].navheight + 'px';
                scrollContent.style.paddingTop = _this.data[name].paddingTop + supertabsToolbar.clientHeight + _this.data[name].navheight + 'px';
                scrollContent.scrollTop = s;
            }
            header.nativeElement.style.transform = null;
            supertabsToolbar.style.transform = null;
        }), 20);
    };
    HidenavService.decorators = [
        { type: Injectable, args: [{
                    providedIn: 'root'
                },] }
    ];
    HidenavService.ctorParameters = function () { return []; };
    /** @nocollapse */ HidenavService.ngInjectableDef = i0.defineInjectable({ factory: function HidenavService_Factory() { return new HidenavService(); }, token: HidenavService, providedIn: "root" });
    return HidenavService;
}());
export { HidenavService };
if (false) {
    /** @type {?} */
    HidenavService.prototype.data;
    /** @type {?} */
    HidenavService.prototype.names;
    /** @type {?} */
    HidenavService.prototype.tabnames;
}
//# sourceMappingURL=data:application/json;base64,