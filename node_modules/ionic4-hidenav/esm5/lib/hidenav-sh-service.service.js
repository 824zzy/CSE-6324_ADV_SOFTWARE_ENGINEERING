/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { Injectable } from '@angular/core';
import { Subject } from 'rxjs';
import * as i0 from "@angular/core";
var HidenavShService = /** @class */ (function () {
    function HidenavShService() {
        this.data = [];
        this.mode = 'ios';
        this.names = [];
        this.tabnames = [];
        this.scroll = new Subject();
    }
    /**
     * @return {?}
     */
    HidenavShService.prototype.requestName = /**
     * @return {?}
     */
    function () {
        /** @type {?} */
        var name = 'page' + this.names.length;
        this.names.push(name);
        return name;
    };
    /**
     * @param {?} name
     * @return {?}
     */
    HidenavShService.prototype.requestTabName = /**
     * @param {?} name
     * @return {?}
     */
    function (name) {
        if (!this.tabnames[name])
            this.tabnames[name] = [];
        /** @type {?} */
        var tabname = name + 'tab' + this.tabnames[name].length;
        this.tabnames[name].push(tabname);
        return tabname;
    };
    /**
     * @param {?} name
     * @return {?}
     */
    HidenavShService.prototype.initiate = /**
     * @param {?} name
     * @return {?}
     */
    function (name) {
        var e_1, _a;
        /** @type {?} */
        var names = [];
        for (var key in this.data) {
            if (this.data[key].parent == name)
                names.push(key);
        }
        try {
            for (var names_1 = tslib_1.__values(names), names_1_1 = names_1.next(); !names_1_1.done; names_1_1 = names_1.next()) {
                var name_1 = names_1_1.value;
                this.initiate2(name_1);
            }
        }
        catch (e_1_1) { e_1 = { error: e_1_1 }; }
        finally {
            try {
                if (names_1_1 && !names_1_1.done && (_a = names_1.return)) _a.call(names_1);
            }
            finally { if (e_1) throw e_1.error; }
        }
        if (names.length == 0)
            this.initiate2(name);
    };
    /**
     * @param {?} name
     * @return {?}
     */
    HidenavShService.prototype.initiate2 = /**
     * @param {?} name
     * @return {?}
     */
    function (name) {
        if (!(this.data[name] && (this.data[name].parent && this.data[this.data[name].parent] && this.data[this.data[name].parent].tabscontent && this.data[name].content && this.data[this.data[name].parent].header) || (!this.data[name].parent && this.data[name].content && this.data[name].header)))
            return false;
        /** @type {?} */
        var parent = this.data[name].parent;
        /** @type {?} */
        var content = this.data[name].content;
        if (this.data[name].lastscroll == null)
            this.data[name].lastscroll = 0;
        if (this.data[name].guardEvents == null)
            this.data[name].guardEvents = true;
        content.scrollEvents = true;
        if (!parent) {
            /** @type {?} */
            var header = this.data[name].header;
            if (this.data[name].static) {
                this.data[name].static.forEach((/**
                 * @param {?} el
                 * @return {?}
                 */
                function (el) {
                    el.nativeElement.style.position = 'absolute';
                    el.nativeElement.style.zIndex = 102;
                }));
            }
            if (header) {
                /** @type {?} */
                var parentElem = header.nativeElement.parentNode;
                /** @type {?} */
                var elem = header.nativeElement;
                if (parentElem.getAttribute('init-expanded') == 'true')
                    this.data[name].initExpanded = true;
                /** @type {?} */
                var notchHeight = parseInt(getComputedStyle(document.documentElement).getPropertyValue("--ion-safe-area-top"), 10);
                this.data[name].shrinkexpandheaderHeight = parseInt(parentElem.getAttribute('header-height'), 10) + notchHeight;
                this.data[name].opacityFactor = parseInt(parentElem.getAttribute('opacity-factor'), 10);
                this.data[name].opacityColor = parentElem.getAttribute('opacity-color');
                this.data[name].blurFactor = parseInt(parentElem.getAttribute('blur-factor'), 10);
                parentElem.style.height = this.data[name].shrinkexpandheaderHeight + 'px';
                parentElem.style.overflow = 'hidden';
                parentElem.style.position = 'absolute';
                elem.style.position = 'absolute';
                parentElem.style.width = '100%';
                elem.style.width = '100%';
                this.waitforelem(name, 'this.data[name].header.nativeElement.scrollHeight', 'proceedShrinkExpand');
            }
        }
        else if (parent) {
            /** @type {?} */
            var header = this.data[parent].header;
            /** @type {?} */
            var tabscontentElem = this.data[parent].tabscontentElem;
            if (this.data[parent].static) {
                this.data[parent].static.forEach((/**
                 * @param {?} el
                 * @return {?}
                 */
                function (el) {
                    el.nativeElement.style.position = 'absolute';
                    el.nativeElement.style.zIndex = 102;
                }));
            }
            if (header) {
                /** @type {?} */
                var supertabsToolbar = tabscontentElem.nativeElement.querySelector('super-tabs-toolbar');
                /** @type {?} */
                var parentElem = header.nativeElement.parentNode;
                /** @type {?} */
                var elem = header.nativeElement;
                if (parentElem.getAttribute('init-expanded') == 'true')
                    this.data[name].initExpanded = true;
                if (parentElem.getAttribute('preserve-header') == 'true') {
                    this.data[name].preserveHeader = true;
                    this.data[parent].preserveHeader = true;
                }
                /** @type {?} */
                var notchHeight = parseInt(getComputedStyle(document.documentElement).getPropertyValue("--ion-safe-area-top"), 10);
                this.data[name].shrinkexpandheaderHeight = parseInt(parentElem.getAttribute('header-height'), 10) + notchHeight;
                this.data[name].opacityFactor = parseInt(parentElem.getAttribute('opacity-factor'), 10);
                this.data[name].opacityColor = elem.getAttribute('opacity-color');
                this.data[name].blurFactor = parseInt(parentElem.getAttribute('blur-factor'), 10);
                parentElem.style.height = this.data[name].shrinkexpandheaderHeight + 'px';
                parentElem.style.overflow = 'hidden';
                parentElem.style.position = 'absolute';
                elem.style.position = 'absolute';
                parentElem.style.width = '100%';
                elem.style.width = '100%';
                supertabsToolbar.style.position = 'absolute';
                supertabsToolbar.style.transform = 'translate3d(0, ' + this.data[name].shrinkexpandheaderHeight + 'px, 0)';
                parentElem.style.zIndex = 101;
                this.waitforelemTabs(name, 'this.data[this.data[name].parent].header.nativeElement.scrollHeight', 'this.data[this.data[name].parent].tabscontentElem.nativeElement.querySelector(\'super-tabs-toolbar\').clientHeight', 'proceedShrinkExpandTabs');
            }
        }
    };
    /**
     * @param {?} name
     * @param {?} evaluate
     * @param {?} func
     * @return {?}
     */
    HidenavShService.prototype.waitforelem = /**
     * @param {?} name
     * @param {?} evaluate
     * @param {?} func
     * @return {?}
     */
    function (name, evaluate, func) {
        /** @type {?} */
        var x = eval(evaluate);
        if (!{ x: x } || x < this.data[name].shrinkexpandheaderHeight) {
            window.requestAnimationFrame(this.waitforelem.bind(this, name, evaluate, func));
        }
        else {
            this[func](name);
        }
    };
    /**
     * @param {?} name
     * @param {?} evaluate
     * @param {?} evaluate2
     * @param {?} func
     * @return {?}
     */
    HidenavShService.prototype.waitforelemTabs = /**
     * @param {?} name
     * @param {?} evaluate
     * @param {?} evaluate2
     * @param {?} func
     * @return {?}
     */
    function (name, evaluate, evaluate2, func) {
        /** @type {?} */
        var x = eval(evaluate);
        /** @type {?} */
        var y = eval(evaluate2);
        if (!{ x: x } || x < this.data[name].shrinkexpandheaderHeight || !{ y: y } || y == 0) {
            window.requestAnimationFrame(this.waitforelemTabs.bind(this, name, evaluate, evaluate2, func));
        }
        else {
            this[func](name);
        }
    };
    /**
     * @param {?} name
     * @return {?}
     */
    HidenavShService.prototype.proceedShrinkExpand = /**
     * @param {?} name
     * @return {?}
     */
    function (name) {
        var _this = this;
        /** @type {?} */
        var parentElem = this.data[name].header.nativeElement.parentNode;
        /** @type {?} */
        var elem = this.data[name].header.nativeElement;
        /** @type {?} */
        var overlay = this.data[name].header.nativeElement.parentNode.querySelector('.overlay');
        if (this.data[name].opacityColor) {
            overlay.style.setProperty('--color', this.data[name].opacityColor);
        }
        if (this.data[name].opacityFactor > 0) {
            //angular decides that opacity is bad and changes it to alpha which doesn't work lol
            overlay.style.setProperty('filter', 'opacity(var(--opacity))');
            overlay.style.setProperty('--opacity', this.data[name].opacityFactor / 10);
        }
        if (this.data[name].blurFactor > 0) {
            elem.style.setProperty('filter', 'blur(var(--blur))');
            elem.style.setProperty('--blur', this.data[name].blurFactor / 10);
        }
        this.data[name].shrinkexpandHeight = this.data[name].shrinkexpandheaderHeight;
        this.data[name].shrinkexpandHeight = this.data[name].header.nativeElement.scrollHeight;
        elem.style.transform = 'translate3d(0, ' + -((this.data[name].shrinkexpandHeight - this.data[name].shrinkexpandheaderHeight) / 2) + 'px, 0)';
        this.data[name].content.getScrollElement().then((/**
         * @param {?} res
         * @return {?}
         */
        function (res) {
            _this.data[name].contentElem = res;
            _this.data[name].paddingTop = parseInt(window.getComputedStyle(_this.data[name].contentElem)['padding-top'], 10);
            _this.data[name].contentElem.style.paddingTop = (_this.data[name].shrinkexpandHeight + _this.data[name].paddingTop) + 'px';
            //this.data[name].contentElem.style.marginTop = this.data[name].shrinkexpandheaderHeight + 'px';
            /** @type {?} */
            var elemPad = document.createElement('div');
            elemPad.style.cssText = 'background:rgba(0,0,0,0)';
            /** @type {?} */
            var x = _this.data[name].contentElem.scrollHeight + (_this.data[name].shrinkexpandHeight - _this.data[name].shrinkexpandheaderHeight);
            //experimental height
            elemPad.style.height = x + 'px';
            setTimeout((/**
             * @return {?}
             */
            function () {
                //check if height is still ok and adjust if not
                _this.data[name].elemPadHeight = Math.max(0, (x - (_this.data[name].contentElem.scrollHeight - _this.data[name].contentElem.offsetHeight) + (_this.data[name].shrinkexpandHeight - _this.data[name].shrinkexpandheaderHeight)));
                elemPad.style.height = _this.data[name].elemPadHeight + 'px';
            }), 100);
            _this.data[name].contentElem.appendChild(elemPad);
            /** @type {?} */
            var scrollDist = _this.data[name].initExpanded ? 2 : (_this.data[name].shrinkexpandHeight - _this.data[name].shrinkexpandheaderHeight);
            _this.data[name].content.scrollByPoint(0, scrollDist, 0).then((/**
             * @return {?}
             */
            function () {
                _this.data[name].contentHeight = _this.data[name].contentEl.nativeElement.clientHeight;
                _this.data[name].content.scrollEvents = true;
                _this.data[name].content.ionScroll.subscribe((/**
                 * @param {?} e
                 * @return {?}
                 */
                function (e) {
                    if (e.detail.scrollTop == 0) {
                        _this.data[name].contentElem.style.paddingTop = 0;
                        _this.data[name].contentEl.nativeElement.style.height = (_this.data[name].contentHeight - _this.data[name].shrinkexpandHeight) + 'px';
                        _this.data[name].contentEl.nativeElement.style.top = (_this.data[name].shrinkexpandHeight + _this.data[name].paddingTop) + 'px';
                        elemPad.style.height = (_this.data[name].elemPadHeight + _this.data[name].shrinkexpandHeight + _this.data[name].paddingTop) + 'px';
                    }
                    else {
                        /** @type {?} */
                        var s = e.detail.scrollTop;
                        _this.data[name].contentElem.style.paddingTop = (_this.data[name].shrinkexpandHeight + _this.data[name].paddingTop) + 'px';
                        _this.data[name].contentEl.nativeElement.style.height = (_this.data[name].contentHeight + _this.data[name].shrinkexpandHeight) + 'px';
                        _this.data[name].contentEl.nativeElement.style.top = null;
                        _this.data[name].contentElem.scrollTop = s;
                        elemPad.style.height = _this.data[name].elemPadHeight + 'px';
                    }
                    if (_this.data[name].initExpanded) {
                        _this.data[name].content.scrollToPoint(0, 0, 0).then((/**
                         * @return {?}
                         */
                        function () {
                            _this.data[name].initExpanded = false;
                        }));
                    }
                    if (_this.data[name].initExpanded) {
                        _this.data[name].content.scrollToPoint(0, 0, 0).then((/**
                         * @return {?}
                         */
                        function () {
                            _this.data[name].initExpanded = false;
                        }));
                    }
                    /** @type {?} */
                    var height = Math.max(Math.min(_this.data[name].shrinkexpandHeight, _this.data[name].shrinkexpandHeight - e.detail.scrollTop), _this.data[name].shrinkexpandheaderHeight);
                    elem.style.transform = 'translate3d(0, ' + -(Math.min((_this.data[name].shrinkexpandHeight - _this.data[name].shrinkexpandheaderHeight) / 2, e.detail.scrollTop / 2)) + 'px, 0)';
                    parentElem.style.height = height + 'px';
                    /** @type {?} */
                    var scrollFactor = Math.min(e.detail.scrollTop / (_this.data[name].shrinkexpandHeight / 2), 1);
                    if (scrollFactor >= 0) {
                        /** @type {?} */
                        var currentValOpacity = overlay.style.getPropertyValue('--opacity');
                        /** @type {?} */
                        var newValOpacity = _this.data[name].opacityFactor / 10 * scrollFactor;
                        if (currentValOpacity != newValOpacity)
                            overlay.style.setProperty('--opacity', newValOpacity);
                        /** @type {?} */
                        var currentValBlur = elem.style.getPropertyValue('--blur');
                        /** @type {?} */
                        var newValBlur = (_this.data[name].blurFactor * scrollFactor) + 'px';
                        if (currentValBlur != newValBlur)
                            elem.style.setProperty('--blur', newValBlur);
                    }
                    //event emitter
                    setTimeout((/**
                     * @return {?}
                     */
                    function () {
                        _this.data[name].guardEvents = false;
                    }), 10);
                    if (_this.data[name].lastscroll != height && !_this.data[name].guardEvents) {
                        _this.scroll.next({ name: _this.data[name].parent ? _this.data[name].parent : name, height: height });
                    }
                    _this.data[name].lastscroll = height;
                    //
                }));
                //catch the last tick
                _this.data[name].content.ionScrollEnd.subscribe((/**
                 * @return {?}
                 */
                function () {
                    setTimeout((/**
                     * @return {?}
                     */
                    function () {
                        if (_this.data[name].contentElem.scrollTop == 0) {
                            _this.data[name].contentElem.style.paddingTop = 0;
                            _this.data[name].contentEl.nativeElement.style.height = (_this.data[name].contentHeight - _this.data[name].shrinkexpandHeight) + 'px';
                            _this.data[name].contentEl.nativeElement.style.top = (_this.data[name].shrinkexpandHeight + _this.data[name].paddingTop) + 'px';
                            elemPad.style.height = (_this.data[name].elemPadHeight + _this.data[name].shrinkexpandHeight + _this.data[name].paddingTop) + 'px';
                        }
                    }), 10);
                }));
            }));
        }));
    };
    /**
     * @param {?} name
     * @return {?}
     */
    HidenavShService.prototype.proceedShrinkExpandTabs = /**
     * @param {?} name
     * @return {?}
     */
    function (name) {
        var _this = this;
        /** @type {?} */
        var parent = this.data[name].parent;
        /** @type {?} */
        var parentElem = this.data[parent].header.nativeElement.parentNode;
        /** @type {?} */
        var elem = this.data[parent].header.nativeElement;
        /** @type {?} */
        var tabscontentElem = this.data[parent].tabscontentElem;
        /** @type {?} */
        var supertabsToolbar = tabscontentElem.nativeElement.querySelector('super-tabs-toolbar');
        /** @type {?} */
        var overlay = this.data[parent].header.nativeElement.parentNode.querySelector('.overlay');
        if (this.data[name].opacityColor) {
            overlay.style.setProperty('--color', this.data[name].opacityColor);
        }
        if (this.data[name].opacityFactor > 0) {
            //angular decides that opacity is bad and changes it to alpha which doesn't work lol
            overlay.style.setProperty('filter', 'opacity(var(--opacity))');
            overlay.style.setProperty('--opacity', this.data[name].opacityFactor / 10);
        }
        if (this.data[name].blurFactor > 0) {
            elem.style.setProperty('filter', 'blur(var(--blur))');
            elem.style.setProperty('--blur', this.data[name].blurFactor / 10);
        }
        this.data[name].shrinkexpandHeight = this.data[name].shrinkexpandheaderHeight;
        this.data[name].shrinkexpandHeight = elem.scrollHeight;
        elem.style.transform = 'translate3d(0, ' + -((this.data[name].shrinkexpandHeight - this.data[name].shrinkexpandheaderHeight) / 2) + 'px, 0)';
        this.data[name].content.getScrollElement().then((/**
         * @param {?} res
         * @return {?}
         */
        function (res) {
            _this.data[name].contentElem = res;
            _this.data[name].paddingTop = parseInt(window.getComputedStyle(_this.data[name].contentElem)['padding-top'], 10);
            _this.data[name].contentElem.style.paddingTop = (_this.data[name].shrinkexpandHeight + supertabsToolbar.clientHeight + _this.data[name].paddingTop) + 'px';
            _this.data[name].contentElem.style.height = (_this.data[parent].tabscontentElem.nativeElement.clientHeight) + 'px';
            //this.data[name].contentElem.style.marginTop = this.data[name].shrinkexpandheaderHeight + 'px';
            /** @type {?} */
            var elemPad = document.createElement('div');
            elemPad.style.cssText = 'background:rgba(0,0,0,0)';
            /** @type {?} */
            var x = _this.data[name].contentElem.scrollHeight + (_this.data[name].shrinkexpandHeight - _this.data[name].shrinkexpandheaderHeight);
            //experimental height
            elemPad.style.height = x + 'px';
            setTimeout((/**
             * @return {?}
             */
            function () {
                //check if height is still ok and adjust if not
                _this.data[name].elemPadHeight = Math.max(0, (x - (_this.data[name].contentElem.scrollHeight - _this.data[name].contentElem.offsetHeight) + (_this.data[name].shrinkexpandHeight - _this.data[name].shrinkexpandheaderHeight)));
                elemPad.style.height = _this.data[name].elemPadHeight + 'px';
            }), 100);
            _this.data[name].contentElem.appendChild(elemPad);
            /** @type {?} */
            var scrollDist = _this.data[name].initExpanded ? 2 : (_this.data[name].shrinkexpandHeight - _this.data[name].shrinkexpandheaderHeight);
            _this.data[name].content.scrollByPoint(0, scrollDist, 0).then((/**
             * @return {?}
             */
            function () {
                _this.data[name].contentHeight = _this.data[name].contentEl.nativeElement.clientHeight;
                _this.data[name].content.scrollEvents = true;
                _this.data[name].content.ionScroll.subscribe((/**
                 * @param {?} e
                 * @return {?}
                 */
                function (e) {
                    if (e.detail.scrollTop == 0) {
                        _this.data[name].contentElem.style.paddingTop = 0;
                        _this.data[name].contentEl.nativeElement.style.height = (_this.data[name].contentHeight - (_this.data[name].shrinkexpandHeight + supertabsToolbar.clientHeight)) + 'px';
                        _this.data[name].contentEl.nativeElement.style.top = (_this.data[name].shrinkexpandHeight + supertabsToolbar.clientHeight + _this.data[name].paddingTop) + 'px';
                        elemPad.style.height = (_this.data[name].elemPadHeight + _this.data[name].shrinkexpandHeight + _this.data[name].paddingTop + supertabsToolbar.clientHeight) + 'px';
                    }
                    else {
                        /** @type {?} */
                        var s = e.detail.scrollTop;
                        _this.data[name].contentElem.style.paddingTop = (_this.data[name].shrinkexpandHeight + supertabsToolbar.clientHeight + _this.data[name].paddingTop) + 'px';
                        _this.data[name].contentEl.nativeElement.style.height = (_this.data[name].contentHeight + _this.data[name].shrinkexpandHeight + supertabsToolbar.clientHeight) + 'px';
                        _this.data[name].contentEl.nativeElement.style.top = null;
                        _this.data[name].contentElem.scrollTop = s;
                        elemPad.style.height = _this.data[name].elemPadHeight + 'px';
                    }
                    if (_this.data[name].initExpanded) {
                        _this.data[name].content.scrollToPoint(0, 0, 0).then((/**
                         * @return {?}
                         */
                        function () {
                            _this.data[name].initExpanded = false;
                        }));
                    }
                    /** @type {?} */
                    var height = Math.max(Math.min(_this.data[name].shrinkexpandHeight, _this.data[name].shrinkexpandHeight - e.detail.scrollTop), _this.data[name].shrinkexpandheaderHeight);
                    elem.style.transform = 'translate3d(0, ' + -(Math.min((_this.data[name].shrinkexpandHeight - _this.data[name].shrinkexpandheaderHeight) / 2, e.detail.scrollTop / 2)) + 'px, 0)';
                    parentElem.style.height = height + 'px';
                    /** @type {?} */
                    var scrollFactor = Math.min(e.detail.scrollTop / (_this.data[name].shrinkexpandHeight / 2), 1);
                    if (scrollFactor >= 0) {
                        /** @type {?} */
                        var currentValOpacity = overlay.style.getPropertyValue('--opacity');
                        /** @type {?} */
                        var newValOpacity = _this.data[name].opacityFactor / 10 * scrollFactor;
                        if (currentValOpacity != newValOpacity)
                            overlay.style.setProperty('--opacity', newValOpacity);
                        /** @type {?} */
                        var currentValBlur = elem.style.getPropertyValue('--blur');
                        /** @type {?} */
                        var newValBlur = (_this.data[name].blurFactor * scrollFactor) + 'px';
                        if (currentValBlur != newValBlur)
                            elem.style.setProperty('--blur', newValBlur);
                    }
                    supertabsToolbar.style.transform = 'translate3d(0, ' + height + 'px, 0)';
                    //event emitter
                    setTimeout((/**
                     * @return {?}
                     */
                    function () {
                        _this.data[name].guardEvents = false;
                    }), 10);
                    if (_this.data[name].lastscroll != height && !_this.data[name].guardEvents) {
                        _this.scroll.next({ name: _this.data[name].parent ? _this.data[name].parent : name, height: height });
                    }
                    _this.data[name].lastscroll = height;
                    //
                }));
                //catch the last tick
                _this.data[name].content.ionScrollEnd.subscribe((/**
                 * @return {?}
                 */
                function () {
                    setTimeout((/**
                     * @return {?}
                     */
                    function () {
                        if (_this.data[name].contentElem.scrollTop == 0) {
                            _this.data[name].contentElem.style.paddingTop = 0;
                            _this.data[name].contentEl.nativeElement.style.height = (_this.data[name].contentHeight - (_this.data[name].shrinkexpandHeight + supertabsToolbar.clientHeight)) + 'px';
                            _this.data[name].contentEl.nativeElement.style.top = (_this.data[name].shrinkexpandHeight + supertabsToolbar.clientHeight + _this.data[name].paddingTop) + 'px';
                            elemPad.style.height = (_this.data[name].elemPadHeight + _this.data[name].shrinkexpandHeight + _this.data[name].paddingTop + supertabsToolbar.clientHeight) + 'px';
                        }
                    }), 10);
                }));
            }));
        }));
    };
    /**
     * @param {?} name
     * @return {?}
     */
    HidenavShService.prototype.resetContent = /**
     * @param {?} name
     * @return {?}
     */
    function (name) {
        if (!this.data[name].preserveHeader) {
            /** @type {?} */
            var parent_1 = this.data[name].parent;
            /** @type {?} */
            var height = parseInt(this.data[parent_1].header.nativeElement.parentNode.style.height, 10);
            if (height <= this.data[name].shrinkexpandHeight && height > this.data[name].shrinkexpandheaderHeight || height == this.data[name].shrinkexpandheaderHeight && this.data[name].contentElem.scrollTop < (this.data[name].shrinkexpandHeight - this.data[name].shrinkexpandheaderHeight)) {
                this.data[name].contentElem.scrollTop = this.data[name].shrinkexpandHeight - height;
            }
        }
        else {
            /** @type {?} */
            var parent_2 = this.data[name].parent;
            /** @type {?} */
            var parentElem = this.data[parent_2].header.nativeElement.parentNode;
            /** @type {?} */
            var elem = this.data[parent_2].header.nativeElement;
            /** @type {?} */
            var tabscontentElem = this.data[parent_2].tabscontentElem;
            /** @type {?} */
            var supertabsToolbar = tabscontentElem.nativeElement.querySelector('super-tabs-toolbar');
            /** @type {?} */
            var overlay = this.data[parent_2].header.nativeElement.parentNode.querySelector('.overlay');
            /** @type {?} */
            var height = Math.max(Math.min(this.data[name].shrinkexpandHeight, this.data[name].shrinkexpandHeight - this.data[name].contentElem.scrollTop), this.data[name].shrinkexpandheaderHeight);
            elem.style.transform = 'translate3d(0, ' + -(Math.min((this.data[name].shrinkexpandHeight - this.data[name].shrinkexpandheaderHeight) / 2, this.data[name].contentElem.scrollTop / 2)) + 'px, 0)';
            parentElem.style.height = height + 'px';
            overlay.style.setProperty('--opacity', this.data[name].opacityFactor / 10 * Math.min(this.data[name].contentElem.scrollTop / (this.data[name].shrinkexpandHeight / 2), 1));
            elem.style.setProperty('--blur', (this.data[name].blurFactor * Math.min(this.data[name].contentElem.scrollTop / (this.data[name].shrinkexpandHeight / 2), 1)) + 'px');
            supertabsToolbar.style.transform = 'translate3d(0, ' + height + 'px, 0)';
            this.scroll.next({ name: this.data[name].parent, height: height });
        }
    };
    /**
     * @param {?} parent
     * @return {?}
     */
    HidenavShService.prototype.findCurrentTab = /**
     * @param {?} parent
     * @return {?}
     */
    function (parent) {
        var e_2, _a;
        /** @type {?} */
        var i = this.data[parent].supertabs.activeTabIndex;
        /** @type {?} */
        var tabs = this.data[parent].tabscontentElem.nativeElement.querySelectorAll('super-tab');
        /** @type {?} */
        var results = [];
        try {
            for (var tabs_1 = tslib_1.__values(tabs), tabs_1_1 = tabs_1.next(); !tabs_1_1.done; tabs_1_1 = tabs_1.next()) {
                var tab = tabs_1_1.value;
                /** @type {?} */
                var cont = tab.querySelector('ion-content');
                if (cont.attributes['hidenav-sh-content'])
                    results.push(cont.attributes['hidenav-sh-content'].nodeValue);
                else
                    results.push(null);
            }
        }
        catch (e_2_1) { e_2 = { error: e_2_1 }; }
        finally {
            try {
                if (tabs_1_1 && !tabs_1_1.done && (_a = tabs_1.return)) _a.call(tabs_1);
            }
            finally { if (e_2) throw e_2.error; }
        }
        if (results[i] != null) {
            return results[i];
        }
        return null;
    };
    /**
     * @param {?} parent
     * @param {?=} duration
     * @return {?}
     */
    HidenavShService.prototype.expand = /**
     * @param {?} parent
     * @param {?=} duration
     * @return {?}
     */
    function (parent, duration) {
        if (duration === void 0) { duration = 200; }
        var e_3, _a;
        if (this.data[parent].content) {
            this.data[parent].content.scrollToPoint(0, 0, duration);
        }
        else {
            if (!this.data[parent].preserveHeader) {
                /** @type {?} */
                var names = [];
                for (var key in this.data) {
                    if (this.data[key].parent == parent)
                        names.push(key);
                }
                try {
                    for (var names_2 = tslib_1.__values(names), names_2_1 = names_2.next(); !names_2_1.done; names_2_1 = names_2.next()) {
                        var name_2 = names_2_1.value;
                        this.data[name_2].content.scrollToPoint(0, 0, duration);
                    }
                }
                catch (e_3_1) { e_3 = { error: e_3_1 }; }
                finally {
                    try {
                        if (names_2_1 && !names_2_1.done && (_a = names_2.return)) _a.call(names_2);
                    }
                    finally { if (e_3) throw e_3.error; }
                }
            }
            else {
                /** @type {?} */
                var currentTab = this.findCurrentTab(parent);
                this.data[currentTab].content.scrollToPoint(0, 0, duration);
            }
        }
    };
    /**
     * @param {?} parent
     * @param {?=} duration
     * @return {?}
     */
    HidenavShService.prototype.shrink = /**
     * @param {?} parent
     * @param {?=} duration
     * @return {?}
     */
    function (parent, duration) {
        if (duration === void 0) { duration = 200; }
        var e_4, _a;
        /** @type {?} */
        var height = parseInt(this.data[parent].header.nativeElement.parentNode.style.height, 10);
        if (height > this.data[parent].shrinkexpandheaderHeight) {
            if (this.data[parent].content) {
                this.data[parent].content.scrollToPoint(0, (this.data[parent].shrinkexpandHeight - this.data[parent].shrinkexpandheaderHeight), duration);
            }
            else {
                if (!this.data[parent].preserveHeader) {
                    /** @type {?} */
                    var names = [];
                    for (var key in this.data) {
                        if (this.data[key].parent == parent)
                            names.push(key);
                    }
                    try {
                        for (var names_3 = tslib_1.__values(names), names_3_1 = names_3.next(); !names_3_1.done; names_3_1 = names_3.next()) {
                            var name_3 = names_3_1.value;
                            this.data[name_3].content.scrollToPoint(0, (this.data[name_3].shrinkexpandHeight - this.data[name_3].shrinkexpandheaderHeight), duration);
                        }
                    }
                    catch (e_4_1) { e_4 = { error: e_4_1 }; }
                    finally {
                        try {
                            if (names_3_1 && !names_3_1.done && (_a = names_3.return)) _a.call(names_3);
                        }
                        finally { if (e_4) throw e_4.error; }
                    }
                }
                else {
                    /** @type {?} */
                    var currentTab = this.findCurrentTab(parent);
                    this.data[currentTab].content.scrollToPoint(0, (this.data[currentTab].shrinkexpandHeight - this.data[currentTab].shrinkexpandheaderHeight), duration);
                }
            }
        }
    };
    /**
     * @param {?} parent
     * @param {?=} duration
     * @return {?}
     */
    HidenavShService.prototype.toggle = /**
     * @param {?} parent
     * @param {?=} duration
     * @return {?}
     */
    function (parent, duration) {
        if (duration === void 0) { duration = 200; }
        var e_5, _a;
        if (this.data[parent].content) {
            /** @type {?} */
            var height = parseInt(this.data[parent].header.nativeElement.parentNode.style.height, 10);
            if (height < this.data[parent].shrinkexpandHeight)
                this.data[parent].content.scrollToPoint(0, 0, duration);
            else
                this.data[parent].content.scrollToPoint(0, (this.data[parent].shrinkexpandHeight - this.data[parent].shrinkexpandheaderHeight), duration);
        }
        else {
            if (!this.data[parent].preserveHeader) {
                /** @type {?} */
                var names = [];
                for (var key in this.data) {
                    if (this.data[key].parent == parent)
                        names.push(key);
                }
                /** @type {?} */
                var height = parseInt(this.data[parent].header.nativeElement.parentNode.style.height, 10);
                try {
                    for (var names_4 = tslib_1.__values(names), names_4_1 = names_4.next(); !names_4_1.done; names_4_1 = names_4.next()) {
                        var name_4 = names_4_1.value;
                        if (height < this.data[name_4].shrinkexpandHeight)
                            this.data[name_4].content.scrollToPoint(0, 0, duration);
                        else
                            this.data[name_4].content.scrollToPoint(0, (this.data[name_4].shrinkexpandHeight - this.data[name_4].shrinkexpandheaderHeight), duration);
                    }
                }
                catch (e_5_1) { e_5 = { error: e_5_1 }; }
                finally {
                    try {
                        if (names_4_1 && !names_4_1.done && (_a = names_4.return)) _a.call(names_4);
                    }
                    finally { if (e_5) throw e_5.error; }
                }
            }
            else {
                /** @type {?} */
                var currentTab = this.findCurrentTab(parent);
                /** @type {?} */
                var height = parseInt(this.data[parent].header.nativeElement.parentNode.style.height, 10);
                if (height < this.data[currentTab].shrinkexpandHeight)
                    this.data[currentTab].content.scrollToPoint(0, 0, duration);
                else
                    this.data[currentTab].content.scrollToPoint(0, (this.data[currentTab].shrinkexpandHeight - this.data[currentTab].shrinkexpandheaderHeight), duration);
            }
        }
    };
    HidenavShService.decorators = [
        { type: Injectable, args: [{
                    providedIn: 'root'
                },] }
    ];
    HidenavShService.ctorParameters = function () { return []; };
    /** @nocollapse */ HidenavShService.ngInjectableDef = i0.defineInjectable({ factory: function HidenavShService_Factory() { return new HidenavShService(); }, token: HidenavShService, providedIn: "root" });
    return HidenavShService;
}());
export { HidenavShService };
if (false) {
    /** @type {?} */
    HidenavShService.prototype.data;
    /** @type {?} */
    HidenavShService.prototype.mode;
    /** @type {?} */
    HidenavShService.prototype.names;
    /** @type {?} */
    HidenavShService.prototype.tabnames;
    /** @type {?} */
    HidenavShService.prototype.scroll;
}
//# sourceMappingURL=data:application/json;base64,