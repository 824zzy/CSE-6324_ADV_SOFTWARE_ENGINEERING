/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Directive, Input, Host, Self, Optional, ElementRef } from '@angular/core';
import { IonContent } from '@ionic/angular';
import { HidenavService } from './hidenav-service.service';
import $ from "jquery";
var HidenavContentDirective = /** @class */ (function () {
    function HidenavContentDirective(el, contentElem, globals) {
        this.el = el;
        this.contentElem = contentElem;
        this.globals = globals;
    }
    /**
     * @return {?}
     */
    HidenavContentDirective.prototype.ngAfterViewInit = /**
     * @return {?}
     */
    function () {
        var _this = this;
        if (!this.contentElem.nativeElement.hasAttribute('hidenav-tabspage')) {
            this.name = this.globals.requestName();
            $(this.contentElem.nativeElement).attr('hidenav-content', this.name);
            $('[hidenav-header]', $(this.contentElem.nativeElement).parents().get().find((/**
             * @param {?} itm
             * @return {?}
             */
            function (itm) { return $(itm).find('[hidenav-header]').length; }))).attr('hidenav-header', this.name);
            this.start();
        }
        else {
            /** @type {?} */
            var counter_1 = 0;
            /** @type {?} */
            var int_1 = setInterval((/**
             * @return {?}
             */
            function () {
                /** @type {?} */
                var x = $(_this.contentElem.nativeElement).closest('[hidenav-tabscontent]').attr('hidenav-tabscontent');
                counter_1++;
                if (x && x.length > 0) {
                    _this.parent = $(_this.contentElem.nativeElement).closest('[hidenav-tabscontent]').attr('hidenav-tabscontent');
                    _this.name = _this.globals.requestTabName(_this.parent);
                    $(_this.contentElem.nativeElement).attr('hidenav-content', _this.name);
                    $(_this.contentElem.nativeElement).attr('hidenav-tabspage', _this.parent);
                    _this.start();
                    clearInterval(int_1);
                }
                else if (counter_1 > 50) {
                    clearInterval(int_1);
                }
            }), 50);
        }
    };
    /**
     * @return {?}
     */
    HidenavContentDirective.prototype.start = /**
     * @return {?}
     */
    function () {
        if (this.name) {
            if (typeof this.globals.data[this.name] == 'undefined' || this.globals.data[this.name] == null)
                this.globals.data[this.name] = [];
            this.globals.data[this.name].content = this.el;
            this.globals.data[this.name].contentElem = this.contentElem;
            if (this.parent)
                this.globals.data[this.name].parent = this.parent;
            this.globals.initiate(this.name);
        }
    };
    /**
     * @return {?}
     */
    HidenavContentDirective.prototype.ngOnDestroy = /**
     * @return {?}
     */
    function () {
        if (this.name) {
            delete this.globals.data[this.name].content;
        }
    };
    HidenavContentDirective.decorators = [
        { type: Directive, args: [{
                    selector: '[hidenav-content]'
                },] }
    ];
    HidenavContentDirective.ctorParameters = function () { return [
        { type: IonContent, decorators: [{ type: Host }, { type: Self }, { type: Optional }] },
        { type: ElementRef },
        { type: HidenavService }
    ]; };
    HidenavContentDirective.propDecorators = {
        hntb: [{ type: Input, args: ['hidenav-tabspage',] }]
    };
    return HidenavContentDirective;
}());
export { HidenavContentDirective };
if (false) {
    /** @type {?} */
    HidenavContentDirective.prototype.name;
    /** @type {?} */
    HidenavContentDirective.prototype.parent;
    /** @type {?} */
    HidenavContentDirective.prototype.hntb;
    /** @type {?} */
    HidenavContentDirective.prototype.el;
    /** @type {?} */
    HidenavContentDirective.prototype.contentElem;
    /**
     * @type {?}
     * @private
     */
    HidenavContentDirective.prototype.globals;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaGlkZW5hdi1jb250ZW50LmRpcmVjdGl2ZS5qcyIsInNvdXJjZVJvb3QiOiJuZzovL2lvbmljNC1oaWRlbmF2LyIsInNvdXJjZXMiOlsibGliL2hpZGVuYXYtY29udGVudC5kaXJlY3RpdmUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBQyxTQUFTLEVBQUUsS0FBSyxFQUFFLElBQUksRUFBRSxJQUFJLEVBQUUsUUFBUSxFQUFFLFVBQVUsRUFBQyxNQUFNLGVBQWUsQ0FBQztBQUNqRixPQUFPLEVBQUMsVUFBVSxFQUFDLE1BQU0sZ0JBQWdCLENBQUM7QUFDMUMsT0FBTyxFQUFDLGNBQWMsRUFBQyxNQUFNLDJCQUEyQixDQUFDO0FBQ3pELE9BQU8sQ0FBQyxNQUFNLFFBQVEsQ0FBQztBQUV2QjtJQVVJLGlDQUFnRCxFQUFjLEVBQVMsV0FBdUIsRUFBVSxPQUF1QjtRQUEvRSxPQUFFLEdBQUYsRUFBRSxDQUFZO1FBQVMsZ0JBQVcsR0FBWCxXQUFXLENBQVk7UUFBVSxZQUFPLEdBQVAsT0FBTyxDQUFnQjtJQUUvSCxDQUFDOzs7O0lBRUQsaURBQWU7OztJQUFmO1FBQUEsaUJBdUJDO1FBdEJHLElBQUcsQ0FBQyxJQUFJLENBQUMsV0FBVyxDQUFDLGFBQWEsQ0FBQyxZQUFZLENBQUMsa0JBQWtCLENBQUMsRUFBQztZQUNoRSxJQUFJLENBQUMsSUFBSSxHQUFHLElBQUksQ0FBQyxPQUFPLENBQUMsV0FBVyxFQUFFLENBQUM7WUFDdkMsQ0FBQyxDQUFDLElBQUksQ0FBQyxXQUFXLENBQUMsYUFBYSxDQUFDLENBQUMsSUFBSSxDQUFDLGlCQUFpQixFQUFFLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQztZQUNyRSxDQUFDLENBQUMsa0JBQWtCLEVBQUUsQ0FBQyxDQUFDLElBQUksQ0FBQyxXQUFXLENBQUMsYUFBYSxDQUFDLENBQUMsT0FBTyxFQUFFLENBQUMsR0FBRyxFQUFFLENBQUMsSUFBSTs7OztZQUFDLFVBQUEsR0FBRyxJQUFJLE9B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VCxRQUFRLEVBQUUsbUJBQW1CO2lCQUM5Qjs7O2dCQU5PLFVBQVUsdUJBY0EsSUFBSSxZQUFJLElBQUksWUFBSSxRQUFRO2dCQWZNLFVBQVU7Z0JBRWxELGNBQWM7Ozt1QkFXakIsS0FBSyxTQUFDLGtCQUFrQjs7SUFpRDdCLDhCQUFDO0NBQUEsQUF6REQsSUF5REM7U0F0RFksdUJBQXVCOzs7SUFFaEMsdUNBQVU7O0lBQ1YseUNBQVk7O0lBRVosdUNBQXFDOztJQUV4QixxQ0FBaUQ7O0lBQUUsOENBQThCOzs7OztJQUFFLDBDQUErQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7RGlyZWN0aXZlLCBJbnB1dCwgSG9zdCwgU2VsZiwgT3B0aW9uYWwsIEVsZW1lbnRSZWZ9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHtJb25Db250ZW50fSBmcm9tICdAaW9uaWMvYW5ndWxhcic7XG5pbXBvcnQge0hpZGVuYXZTZXJ2aWNlfSBmcm9tICcuL2hpZGVuYXYtc2VydmljZS5zZXJ2aWNlJztcbmltcG9ydCAkIGZyb20gXCJqcXVlcnlcIjtcblxuQERpcmVjdGl2ZSh7XG4gIHNlbGVjdG9yOiAnW2hpZGVuYXYtY29udGVudF0nXG59KVxuZXhwb3J0IGNsYXNzIEhpZGVuYXZDb250ZW50RGlyZWN0aXZlIHtcblxuICAgIG5hbWU6IGFueTtcbiAgICBwYXJlbnQ6IGFueTtcblxuICAgIEBJbnB1dCgnaGlkZW5hdi10YWJzcGFnZScpIGhudGI6IGFueTtcblxuICAgIGNvbnN0cnVjdG9yKCBASG9zdCgpIEBTZWxmKCkgQE9wdGlvbmFsKCkgcHVibGljIGVsOiBJb25Db250ZW50LCBwdWJsaWMgY29udGVudEVsZW06IEVsZW1lbnRSZWYsIHByaXZhdGUgZ2xvYmFsczogSGlkZW5hdlNlcnZpY2UpIHtcblxuICAgIH1cblxuICAgIG5nQWZ0ZXJWaWV3SW5pdCgpIHtcbiAgICAgICAgaWYoIXRoaXMuY29udGVudEVsZW0ubmF0aXZlRWxlbWVudC5oYXNBdHRyaWJ1dGUoJ2hpZGVuYXYtdGFic3BhZ2UnKSl7XG4gICAgICAgICAgICB0aGlzLm5hbWUgPSB0aGlzLmdsb2JhbHMucmVxdWVzdE5hbWUoKTtcbiAgICAgICAgICAgICQodGhpcy5jb250ZW50RWxlbS5uYXRpdmVFbGVtZW50KS5hdHRyKCdoaWRlbmF2LWNvbnRlbnQnLCB0aGlzLm5hbWUpO1xuICAgICAgICAgICAgJCgnW2hpZGVuYXYtaGVhZGVyXScsICQodGhpcy5jb250ZW50RWxlbS5uYXRpdmVFbGVtZW50KS5wYXJlbnRzKCkuZ2V0KCkuZmluZChpdG0gPT4gJChpdG0pLmZpbmQoJ1toaWRlbmF2LWhlYWRlcl0nKS5sZW5ndGgpKS5hdHRyKCdoaWRlbmF2LWhlYWRlcicsIHRoaXMubmFtZSk7XG4gICAgICAgICAgICB0aGlzLnN0YXJ0KCk7XG4gICAgICAgIH1lbHNle1xuICAgICAgICAgICAgbGV0IGNvdW50ZXIgPSAwO1xuICAgICAgICAgICAgbGV0IGludCA9IHNldEludGVydmFsKCgpID0+IHtcbiAgICAgICAgICAgICAgICBsZXQgeCA9ICQodGhpcy5jb250ZW50RWxlbS5uYXRpdmVFbGVtZW50KS5jbG9zZXN0KCdbaGlkZW5hdi10YWJzY29udGVudF0nKS5hdHRyKCdoaWRlbmF2LXRhYnNjb250ZW50Jyk7XG4gICAgICAgICAgICAgICAgY291bnRlcisrO1xuICAgICAgICAgICAgICAgIGlmKHggJiYgeC5sZW5ndGggPiAwKXtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5wYXJlbnQgPSAkKHRoaXMuY29udGVudEVsZW0ubmF0aXZlRWxlbWVudCkuY2xvc2VzdCgnW2hpZGVuYXYtdGFic2NvbnRlbnRdJykuYXR0cignaGlkZW5hdi10YWJzY29udGVudCcpO1xuICAgICAgICAgICAgICAgICAgICB0aGlzLm5hbWUgPSB0aGlzLmdsb2JhbHMucmVxdWVzdFRhYk5hbWUodGhpcy5wYXJlbnQpO1xuICAgICAgICAgICAgICAgICAgICAkKHRoaXMuY29udGVudEVsZW0ubmF0aXZlRWxlbWVudCkuYXR0cignaGlkZW5hdi1jb250ZW50JywgdGhpcy5uYW1lKTtcbiAgICAgICAgICAgICAgICAgICAgJCh0aGlzLmNvbnRlbnRFbGVtLm5hdGl2ZUVsZW1lbnQpLmF0dHIoJ2hpZGVuYXYtdGFic3BhZ2UnLCB0aGlzLnBhcmVudCk7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMuc3RhcnQoKTtcbiAgICAgICAgICAgICAgICAgICAgY2xlYXJJbnRlcnZhbChpbnQpO1xuICAgICAgICAgICAgICAgIH1lbHNlIGlmKGNvdW50ZXIgPiA1MCl7XG4gICAgICAgICAgICAgICAgICAgIGNsZWFySW50ZXJ2YWwoaW50KTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9LCA1MClcbiAgICAgICAgfVxuICAgIH1cblxuICAgIHN0YXJ0KCkge1xuICAgICAgICBpZih0aGlzLm5hbWUpe1xuICAgICAgICAgICAgaWYodHlwZW9mIHRoaXMuZ2xvYmFscy5kYXRhW3RoaXMubmFtZV0gPT0gJ3VuZGVmaW5lZCcgfHwgdGhpcy5nbG9iYWxzLmRhdGFbdGhpcy5uYW1lXSA9PSBudWxsKVxuICAgICAgICAgICAgICAgIHRoaXMuZ2xvYmFscy5kYXRhW3RoaXMubmFtZV0gPSBbXTtcbiAgICAgICAgICAgIHRoaXMuZ2xvYmFscy5kYXRhW3RoaXMubmFtZV0uY29udGVudCA9IHRoaXMuZWw7XG4gICAgICAgICAgICB0aGlzLmdsb2JhbHMuZGF0YVt0aGlzLm5hbWVdLmNvbnRlbnRFbGVtID0gdGhpcy5jb250ZW50RWxlbTtcbiAgICAgICAgICAgIGlmKHRoaXMucGFyZW50KVxuICAgICAgICAgICAgICAgIHRoaXMuZ2xvYmFscy5kYXRhW3RoaXMubmFtZV0ucGFyZW50ID0gdGhpcy5wYXJlbnQ7XG4gICAgICAgICAgICB0aGlzLmdsb2JhbHMuaW5pdGlhdGUodGhpcy5uYW1lKTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIG5nT25EZXN0cm95KCkge1xuICAgICAgICBpZih0aGlzLm5hbWUpe1xuICAgICAgICAgICAgZGVsZXRlIHRoaXMuZ2xvYmFscy5kYXRhW3RoaXMubmFtZV0uY29udGVudDtcbiAgICAgICAgfVxuICAgIH1cblxufVxuIl19