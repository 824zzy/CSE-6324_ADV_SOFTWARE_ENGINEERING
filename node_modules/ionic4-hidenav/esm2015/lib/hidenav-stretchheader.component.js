/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, ContentChild, ElementRef, Input, EventEmitter, Output, ContentChildren, HostBinding } from '@angular/core';
import { HidenavShService } from './hidenav-sh-service.service';
export class HidenavStretchheaderComponent {
    /**
     * @param {?} el
     * @param {?} globals
     */
    constructor(el, globals) {
        this.el = el;
        this.globals = globals;
        this.scroll = new EventEmitter();
    }
    /**
     * @return {?}
     */
    ngOnInit() {
    }
    /**
     * @return {?}
     */
    ngAfterViewInit() {
        /** @type {?} */
        const observer = new MutationObserver((/**
         * @param {?} mutations
         * @return {?}
         */
        (mutations) => {
            mutations.forEach((/**
             * @return {?}
             */
            () => {
                if (this.el.nativeElement.getAttribute('hidenav-sh-header').length > 0) {
                    this.name = this.el.nativeElement.getAttribute('hidenav-sh-header');
                    this.start();
                    observer.disconnect();
                }
            }));
        }));
        observer.observe(this.el.nativeElement, {
            attributes: true,
        });
    }
    /**
     * @return {?}
     */
    start() {
        if (this.name) {
            if (typeof this.globals.data[this.name] == 'undefined' || this.globals.data[this.name] == null)
                this.globals.data[this.name] = [];
            this.globals.data[this.name].header = this.header;
            this.globals.data[this.name].static = this.static;
            this.globals.initiate(this.name);
            this.globals.scroll.subscribe((/**
             * @param {?} res
             * @return {?}
             */
            res => {
                if (res.name == this.name) {
                    this.scroll.emit(res.height);
                }
            }));
            if (this.noBorder != 'true') {
                /** @type {?} */
                let mode = document.querySelector('html').getAttribute('mode');
                setTimeout((/**
                 * @return {?}
                 */
                () => {
                    if (typeof this.class == 'undefined') {
                        this.class = mode;
                    }
                    else {
                        this.class += ' ' + mode;
                    }
                }), 0);
            }
        }
    }
    /**
     * @param {?=} duration
     * @return {?}
     */
    expand(duration = 200) {
        this.globals.expand(this.name, duration);
    }
    /**
     * @param {?=} duration
     * @return {?}
     */
    shrink(duration = 200) {
        this.globals.shrink(this.name, duration);
    }
    /**
     * @param {?=} duration
     * @return {?}
     */
    toggle(duration = 200) {
        this.globals.toggle(this.name, duration);
    }
    /**
     * @return {?}
     */
    ngOnDestroy() {
        if (this.name) {
            delete this.globals.data[this.name].header;
        }
    }
}
HidenavStretchheaderComponent.decorators = [
    { type: Component, args: [{
                selector: 'hidenav-stretchheader',
                template: `
        <style>
            .overlay {
                position: absolute;
                height: inherit;
                width: inherit;
                z-index: 101;
                pointer-events: none;
                /*opacity: var(--opacity);*/
                background: var(--color);
                filter: opacity(0);
                --opacity: 0;
                --color: black;
            }

            :host {
                --blur: 0;
                z-index: 1;
            }

            :host.md {
                -webkit-box-shadow: 0px 2px 5px 0px rgba(0, 0, 0, 0.53);
                -moz-box-shadow: 0px 2px 5px 0px rgba(0, 0, 0, 0.53);
                box-shadow: 0px 2px 5px 0px rgba(0, 0, 0, 0.53);
            }

            :host.ios {
                border-bottom: 1px solid #5a5e63;
            }
        </style>
        <div class="overlay"></div>
        <ng-content></ng-content>
    `
            }] }
];
HidenavStretchheaderComponent.ctorParameters = () => [
    { type: ElementRef },
    { type: HidenavShService }
];
HidenavStretchheaderComponent.propDecorators = {
    header: [{ type: ContentChild, args: ['shrinkexpand', { read: ElementRef },] }],
    static: [{ type: ContentChildren, args: ['static', { read: ElementRef },] }],
    class: [{ type: HostBinding, args: ['class',] }],
    noBorder: [{ type: Input, args: ['no-border',] }],
    headerHeight: [{ type: Input, args: ['header-height',] }],
    initExpanded: [{ type: Input, args: ['init-expanded',] }],
    opacityColor: [{ type: Input, args: ['opacity-color',] }],
    opacityFactor: [{ type: Input, args: ['opacity-factor',] }],
    blurFactor: [{ type: Input, args: ['blur-factor',] }],
    preserveHeader: [{ type: Input, args: ['preserve-header',] }],
    scroll: [{ type: Output }]
};
if (false) {
    /** @type {?} */
    HidenavStretchheaderComponent.prototype.header;
    /** @type {?} */
    HidenavStretchheaderComponent.prototype.static;
    /** @type {?} */
    HidenavStretchheaderComponent.prototype.class;
    /** @type {?} */
    HidenavStretchheaderComponent.prototype.name;
    /** @type {?} */
    HidenavStretchheaderComponent.prototype.noBorder;
    /** @type {?} */
    HidenavStretchheaderComponent.prototype.headerHeight;
    /** @type {?} */
    HidenavStretchheaderComponent.prototype.initExpanded;
    /** @type {?} */
    HidenavStretchheaderComponent.prototype.opacityColor;
    /** @type {?} */
    HidenavStretchheaderComponent.prototype.opacityFactor;
    /** @type {?} */
    HidenavStretchheaderComponent.prototype.blurFactor;
    /** @type {?} */
    HidenavStretchheaderComponent.prototype.preserveHeader;
    /** @type {?} */
    HidenavStretchheaderComponent.prototype.scroll;
    /** @type {?} */
    HidenavStretchheaderComponent.prototype.el;
    /** @type {?} */
    HidenavStretchheaderComponent.prototype.globals;
}
//# sourceMappingURL=data:application/json;base64,