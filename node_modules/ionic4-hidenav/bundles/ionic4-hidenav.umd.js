(function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/common'), require('rxjs'), require('@angular/core'), require('@ionic/angular'), require('@ionic-super-tabs/angular'), require('jquery')) :
    typeof define === 'function' && define.amd ? define('ionic4-hidenav', ['exports', '@angular/common', 'rxjs', '@angular/core', '@ionic/angular', '@ionic-super-tabs/angular', 'jquery'], factory) :
    (factory((global['ionic4-hidenav'] = {}),global.ng.common,global.rxjs,global.ng.core,global.angular,global.angular$1,global.$));
}(this, (function (exports,common,rxjs,i0,angular,angular$1,$) { 'use strict';

    $ = $ && $.hasOwnProperty('default') ? $['default'] : $;

    /*! *****************************************************************************
    Copyright (c) Microsoft Corporation. All rights reserved.
    Licensed under the Apache License, Version 2.0 (the "License"); you may not use
    this file except in compliance with the License. You may obtain a copy of the
    License at http://www.apache.org/licenses/LICENSE-2.0

    THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
    KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED
    WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,
    MERCHANTABLITY OR NON-INFRINGEMENT.

    See the Apache Version 2.0 License for specific language governing permissions
    and limitations under the License.
    ***************************************************************************** */
    function __values(o) {
        var m = typeof Symbol === "function" && o[Symbol.iterator], i = 0;
        if (m)
            return m.call(o);
        return {
            next: function () {
                if (o && i >= o.length)
                    o = void 0;
                return { value: o && o[i++], done: !o };
            }
        };
    }

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    var HidenavService = /** @class */ (function () {
        function HidenavService() {
            this.data = [];
            this.names = [];
            this.tabnames = [];
        }
        /**
         * @return {?}
         */
        HidenavService.prototype.requestName = /**
         * @return {?}
         */
            function () {
                /** @type {?} */
                var name = 'page' + this.names.length;
                this.names.push(name);
                return name;
            };
        /**
         * @param {?} name
         * @return {?}
         */
        HidenavService.prototype.requestTabName = /**
         * @param {?} name
         * @return {?}
         */
            function (name) {
                if (!this.tabnames[name])
                    this.tabnames[name] = [];
                /** @type {?} */
                var tabname = name + 'tab' + this.tabnames[name].length;
                this.tabnames[name].push(tabname);
                return tabname;
            };
        /**
         * @param {?} name
         * @return {?}
         */
        HidenavService.prototype.initiate = /**
         * @param {?} name
         * @return {?}
         */
            function (name) {
                var e_1, _a;
                /** @type {?} */
                var names = [];
                for (var key in this.data) {
                    if (this.data[key].parent == name)
                        names.push(key);
                }
                try {
                    for (var names_1 = __values(names), names_1_1 = names_1.next(); !names_1_1.done; names_1_1 = names_1.next()) {
                        var name_1 = names_1_1.value;
                        this.initiate2(name_1);
                    }
                }
                catch (e_1_1) {
                    e_1 = { error: e_1_1 };
                }
                finally {
                    try {
                        if (names_1_1 && !names_1_1.done && (_a = names_1.return))
                            _a.call(names_1);
                    }
                    finally {
                        if (e_1)
                            throw e_1.error;
                    }
                }
                if (names.length == 0)
                    this.initiate2(name);
            };
        /**
         * @param {?} name
         * @return {?}
         */
        HidenavService.prototype.initiate2 = /**
         * @param {?} name
         * @return {?}
         */
            function (name) {
                var _this = this;
                if (!(this.data[name] && (this.data[name].parent && this.data[this.data[name].parent].tabscontent && this.data[name].content && this.data[this.data[name].parent].header) || (!this.data[name].parent && this.data[name].content && this.data[name].header)))
                    return false;
                /** @type {?} */
                var parent = this.data[name].parent;
                /** @type {?} */
                var content = this.data[name].content;
                /** @type {?} */
                var contentElem = this.data[name].contentElem;
                if (this.data[name].scrollTop == null)
                    this.data[name].scrollTop = 0;
                if (this.data[name].lastscroll == null)
                    this.data[name].lastscroll = 0;
                if (this.data[name].direction == null)
                    this.data[name].direction = '';
                if (this.data[name].tapping == null)
                    this.data[name].tapping = false;
                content.scrollEvents = true;
                if (!parent) {
                    /** @type {?} */
                    var header_1 = this.data[name].header;
                    setTimeout(( /**
                     * @return {?}
                     */function () {
                        _this.data[name].navheight = _this.data[name].header.nativeElement.offsetHeight;
                        /** @type {?} */
                        var scrollContent = contentElem.nativeElement.shadowRoot.querySelector('.inner-scroll');
                        _this.data[name].paddingTop = parseInt(window.getComputedStyle(scrollContent)['padding-top'], 10);
                        content.ionScroll.subscribe(( /**
                         * @param {?} e
                         * @return {?}
                         */function (e) {
                            if (e.detail.scrollTop == 0) {
                                scrollContent.style.top = null;
                                scrollContent.style.paddingTop = _this.data[name].paddingTop + 'px';
                            }
                            else {
                                scrollContent.style.top = '-' + _this.data[name].navheight + 'px';
                                scrollContent.style.paddingTop = _this.data[name].paddingTop + _this.data[name].navheight + 'px';
                            }
                            if (scrollContent.scrollHeight > (scrollContent.clientHeight + 100)) {
                                _this.data[name].scrolling = true;
                                /** @type {?} */
                                var x = _this.data[name].lastscroll - e.detail.scrollTop;
                                _this.data[name].direction = x > 0 ? 'up' : 'down';
                                _this.data[name].lastscroll = e.detail.scrollTop;
                                _this.data[name].scrollTop = _this.data[name].scrollTop - x;
                                if (_this.data[name].scrollTop > _this.data[name].navheight)
                                    _this.data[name].scrollTop = _this.data[name].navheight;
                                if (_this.data[name].scrollTop < 0)
                                    _this.data[name].scrollTop = 0;
                                header_1.nativeElement.style.transform = 'translate3d(0, ' + -_this.data[name].scrollTop + 'px, 0)';
                            }
                        }));
                        content.ionScrollEnd.subscribe(( /**
                         * @return {?}
                         */function () {
                            setTimeout(( /**
                             * @return {?}
                             */function () {
                                //catch the last tick
                                if (scrollContent.scrollTop == 0) {
                                    scrollContent.style.top = null;
                                    scrollContent.style.paddingTop = _this.data[name].paddingTop + 'px';
                                }
                                _this.data[name].scrolling = false;
                                _this.c(name);
                            }), 10);
                        }));
                    }), 100);
                    contentElem.nativeElement.addEventListener('touchend', ( /**
                     * @return {?}
                     */function () {
                        _this.data[name].tapping = false;
                        _this.c(name);
                    }));
                    contentElem.nativeElement.addEventListener('touchstart', ( /**
                     * @return {?}
                     */function () { return _this.data[name].tapping = true; }));
                }
                else if (parent) {
                    /** @type {?} */
                    var header_2 = this.data[parent].header;
                    /** @type {?} */
                    var tabscontentElem_1 = this.data[parent].tabscontentElem;
                    /** @type {?} */
                    var supertabsToolbar_1 = tabscontentElem_1.nativeElement.querySelector('super-tabs-toolbar');
                    setTimeout(( /**
                     * @return {?}
                     */function () {
                        _this.data[parent].tabscontentHeight = tabscontentElem_1.nativeElement.scrollHeight;
                        /** @type {?} */
                        var scrollContent = contentElem.nativeElement.shadowRoot.querySelector('.inner-scroll');
                        /** @type {?} */
                        var tabsscrollContent = _this.data[parent].tabscontentElem.nativeElement.shadowRoot.querySelector('.inner-scroll');
                        if (scrollContent.scrollHeight > (scrollContent.clientHeight + 100)) {
                            _this.data[name].navheight = _this.data[parent].header.nativeElement.offsetHeight;
                            _this.data[name].paddingTop = parseInt(window.getComputedStyle(scrollContent)['padding-top'], 10);
                        }
                        content.ionScroll.subscribe(( /**
                         * @param {?} e
                         * @return {?}
                         */function (e) {
                            if (_this.data[name].tapping && scrollContent.scrollHeight > (scrollContent.clientHeight + 100)) {
                                if (e.detail.scrollTop == 0) {
                                    supertabsToolbar_1.style.position = 'static';
                                    scrollContent.style.paddingTop = _this.data[name].paddingTop + 'px';
                                    tabscontentElem_1.nativeElement.style.top = null;
                                    tabsscrollContent.style.height = _this.data[parent].tabscontentHeight + 'px';
                                    tabscontentElem_1.nativeElement.style.top = null;
                                }
                                else {
                                    /** @type {?} */
                                    var s = e.detail.scrollTop;
                                    supertabsToolbar_1.style.position = 'absolute';
                                    supertabsToolbar_1.style.top = _this.data[name].navheight + 'px';
                                    tabsscrollContent.style.height = (_this.data[parent].tabscontentHeight + _this.data[name].navheight) + 'px';
                                    tabscontentElem_1.nativeElement.style.top = '-' + _this.data[name].navheight + 'px';
                                    scrollContent.style.paddingTop = _this.data[name].paddingTop + supertabsToolbar_1.clientHeight + _this.data[name].navheight + 'px';
                                    scrollContent.scrollTop = s;
                                }
                            }
                            _this.data[name].scrolling = true;
                            /** @type {?} */
                            var x = _this.data[name].lastscroll - e.detail.scrollTop;
                            _this.data[name].direction = x > 0 ? 'up' : 'down';
                            _this.data[name].lastscroll = e.detail.scrollTop;
                            _this.data[name].scrollTop = _this.data[name].scrollTop - x;
                            if (_this.data[name].scrollTop > _this.data[name].navheight)
                                _this.data[name].scrollTop = _this.data[name].navheight;
                            if (_this.data[name].scrollTop < 0)
                                _this.data[name].scrollTop = 0;
                            header_2.nativeElement.style.transform = 'translate3d(0, ' + -_this.data[name].scrollTop + 'px, 0)';
                            supertabsToolbar_1.style.transform = 'translate3d(0, ' + -_this.data[name].scrollTop + 'px, 0)';
                        }));
                        content.ionScrollEnd.subscribe(( /**
                         * @return {?}
                         */function () {
                            setTimeout(( /**
                             * @return {?}
                             */function () {
                                //catch the last tick
                                if (scrollContent.scrollTop == 0) {
                                    supertabsToolbar_1.style.position = 'static';
                                    scrollContent.style.paddingTop = _this.data[name].paddingTop + 'px';
                                    tabscontentElem_1.nativeElement.style.top = null;
                                    tabsscrollContent.style.height = _this.data[parent].tabscontentHeight + 'px';
                                    tabscontentElem_1.nativeElement.style.top = null;
                                }
                                _this.data[name].scrolling = false;
                                _this.c(name);
                            }), 10);
                        }));
                    }), 100);
                    contentElem.nativeElement.addEventListener('touchend', ( /**
                     * @return {?}
                     */function () {
                        _this.data[name].tapping = false;
                        _this.c(name);
                    }));
                    contentElem.nativeElement.addEventListener('touchstart', ( /**
                     * @return {?}
                     */function () { return _this.data[name].tapping = true; }));
                }
            };
        /**
         * @private
         * @param {?} name
         * @return {?}
         */
        HidenavService.prototype.c = /**
         * @private
         * @param {?} name
         * @return {?}
         */
            function (name) {
                if (this.data[name].tapping || this.data[name].scrolling)
                    return false;
                if (this.data[name].scrollTop == 0 || this.data[name].scrollTop == this.data[name].navheight)
                    return false;
                /** @type {?} */
                var content = this.data[name].content;
                /** @type {?} */
                var scrollTopTemp = this.data[name].scrollTop;
                if (this.data[name].direction == 'down') {
                    if (this.data[name].scrollTop < this.data[name].navheight) {
                        content.scrollByPoint(0, (this.data[name].navheight - scrollTopTemp), (this.data[name].navheight - scrollTopTemp) * 6);
                    }
                }
                else if (this.data[name].direction == 'up') {
                    if (this.data[name].scrollTop < this.data[name].navheight) {
                        content.scrollByPoint(0, -scrollTopTemp, scrollTopTemp * 6);
                    }
                }
            };
        /**
         * @param {?} parent
         * @param {?} name
         * @return {?}
         */
        HidenavService.prototype.resetTabs = /**
         * @param {?} parent
         * @param {?} name
         * @return {?}
         */
            function (parent, name) {
                var _this = this;
                /** @type {?} */
                var header = this.data[parent].header;
                /** @type {?} */
                var tabscontentElem = this.data[parent].tabscontentElem;
                /** @type {?} */
                var supertabsToolbar = tabscontentElem.nativeElement.querySelector('super-tabs-toolbar');
                /** @type {?} */
                var tabsscrollContent = this.data[parent].tabscontentElem.nativeElement.shadowRoot.querySelector('.inner-scroll');
                /** @type {?} */
                var scrollContent = this.data[name].contentElem.nativeElement.shadowRoot.querySelector('.inner-scroll');
                scrollContent.scrollTop = scrollContent.scrollTop - this.data[name].scrollTop;
                setTimeout(( /**
                 * @return {?}
                 */function () {
                    if (scrollContent.scrollTop == 0) {
                        supertabsToolbar.style.position = 'static';
                        scrollContent.style.paddingTop = _this.data[name].paddingTop + 'px';
                        tabscontentElem.nativeElement.style.top = null;
                        tabsscrollContent.style.height = _this.data[parent].tabscontentHeight + 'px';
                        tabscontentElem.nativeElement.style.top = null;
                    }
                    else {
                        /** @type {?} */
                        var s = scrollContent.scrollTop;
                        supertabsToolbar.style.position = 'absolute';
                        supertabsToolbar.style.top = _this.data[name].navheight + 'px';
                        tabsscrollContent.style.height = (_this.data[parent].tabscontentHeight + _this.data[name].navheight) + 'px';
                        tabscontentElem.nativeElement.style.top = '-' + _this.data[name].navheight + 'px';
                        scrollContent.style.paddingTop = _this.data[name].paddingTop + supertabsToolbar.clientHeight + _this.data[name].navheight + 'px';
                        scrollContent.scrollTop = s;
                    }
                    header.nativeElement.style.transform = null;
                    supertabsToolbar.style.transform = null;
                }), 20);
            };
        HidenavService.decorators = [
            { type: i0.Injectable, args: [{
                        providedIn: 'root'
                    },] }
        ];
        HidenavService.ctorParameters = function () { return []; };
        /** @nocollapse */ HidenavService.ngInjectableDef = i0.defineInjectable({ factory: function HidenavService_Factory() { return new HidenavService(); }, token: HidenavService, providedIn: "root" });
        return HidenavService;
    }());

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    var HidenavTabscontentDirective = /** @class */ (function () {
        function HidenavTabscontentDirective(el, contentElem, globals) {
            this.el = el;
            this.contentElem = contentElem;
            this.globals = globals;
        }
        /**
         * @return {?}
         */
        HidenavTabscontentDirective.prototype.ngAfterViewInit = /**
         * @return {?}
         */
            function () {
                var _this = this;
                this.name = this.globals.requestName();
                this.contentElem.nativeElement.setAttribute('hidenav-tabscontent', this.name);
                $('[hidenav-header]', $(this.contentElem.nativeElement).parents().get().find(( /**
                 * @param {?} itm
                 * @return {?}
                 */function (itm) { return $(itm).find('[hidenav-header]').length; }))).attr('hidenav-header', this.name);
                if (this.name) {
                    if (typeof this.globals.data[this.name] == 'undefined' || this.globals.data[this.name] == null)
                        this.globals.data[this.name] = [];
                    this.globals.data[this.name].tabscontent = this.el;
                    this.globals.data[this.name].tabscontentElem = this.contentElem;
                    this.globals.initiate(this.name);
                    if (this.supertabs) {
                        this.supertabs.tabChange.subscribe(( /**
                         * @param {?} e
                         * @return {?}
                         */function (e) {
                            var e_1, _a;
                            if (e.detail.changed == true) {
                                /** @type {?} */
                                var i = e.detail.index;
                                /** @type {?} */
                                var tabs = _this.contentElem.nativeElement.querySelectorAll('super-tab');
                                /** @type {?} */
                                var results = [];
                                try {
                                    for (var tabs_1 = __values(tabs), tabs_1_1 = tabs_1.next(); !tabs_1_1.done; tabs_1_1 = tabs_1.next()) {
                                        var tab = tabs_1_1.value;
                                        /** @type {?} */
                                        var cont = tab.querySelector('ion-content');
                                        if (cont.attributes['hidenav-content'])
                                            results.push(cont.attributes['hidenav-content'].nodeValue);
                                        else
                                            results.push(null);
                                    }
                                }
                                catch (e_1_1) {
                                    e_1 = { error: e_1_1 };
                                }
                                finally {
                                    try {
                                        if (tabs_1_1 && !tabs_1_1.done && (_a = tabs_1.return))
                                            _a.call(tabs_1);
                                    }
                                    finally {
                                        if (e_1)
                                            throw e_1.error;
                                    }
                                }
                                if (results[i] != null) {
                                    _this.globals.resetTabs(_this.name, results[i]);
                                }
                            }
                        }));
                    }
                }
            };
        /**
         * @return {?}
         */
        HidenavTabscontentDirective.prototype.ngOnDestroy = /**
         * @return {?}
         */
            function () {
                if (this.name) {
                    delete this.globals.data[this.name].tabscontent;
                }
            };
        HidenavTabscontentDirective.decorators = [
            { type: i0.Directive, args: [{
                        selector: '[hidenav-tabscontent]'
                    },] }
        ];
        HidenavTabscontentDirective.ctorParameters = function () {
            return [
                { type: angular.IonContent, decorators: [{ type: i0.Host }, { type: i0.Self }, { type: i0.Optional }] },
                { type: i0.ElementRef },
                { type: HidenavService }
            ];
        };
        HidenavTabscontentDirective.propDecorators = {
            supertabs: [{ type: i0.ContentChild, args: [i0.forwardRef(( /**
                                     * @return {?}
                                     */function () { return angular$1.SuperTabs; })),] }]
        };
        return HidenavTabscontentDirective;
    }());

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    var HidenavContentDirective = /** @class */ (function () {
        function HidenavContentDirective(el, contentElem, globals) {
            this.el = el;
            this.contentElem = contentElem;
            this.globals = globals;
        }
        /**
         * @return {?}
         */
        HidenavContentDirective.prototype.ngAfterViewInit = /**
         * @return {?}
         */
            function () {
                var _this = this;
                if (!this.contentElem.nativeElement.hasAttribute('hidenav-tabspage')) {
                    this.name = this.globals.requestName();
                    $(this.contentElem.nativeElement).attr('hidenav-content', this.name);
                    $('[hidenav-header]', $(this.contentElem.nativeElement).parents().get().find(( /**
                     * @param {?} itm
                     * @return {?}
                     */function (itm) { return $(itm).find('[hidenav-header]').length; }))).attr('hidenav-header', this.name);
                    this.start();
                }
                else {
                    /** @type {?} */
                    var counter_1 = 0;
                    /** @type {?} */
                    var int_1 = setInterval(( /**
                     * @return {?}
                     */function () {
                        /** @type {?} */
                        var x = $(_this.contentElem.nativeElement).closest('[hidenav-tabscontent]').attr('hidenav-tabscontent');
                        counter_1++;
                        if (x && x.length > 0) {
                            _this.parent = $(_this.contentElem.nativeElement).closest('[hidenav-tabscontent]').attr('hidenav-tabscontent');
                            _this.name = _this.globals.requestTabName(_this.parent);
                            $(_this.contentElem.nativeElement).attr('hidenav-content', _this.name);
                            $(_this.contentElem.nativeElement).attr('hidenav-tabspage', _this.parent);
                            _this.start();
                            clearInterval(int_1);
                        }
                        else if (counter_1 > 50) {
                            clearInterval(int_1);
                        }
                    }), 50);
                }
            };
        /**
         * @return {?}
         */
        HidenavContentDirective.prototype.start = /**
         * @return {?}
         */
            function () {
                if (this.name) {
                    if (typeof this.globals.data[this.name] == 'undefined' || this.globals.data[this.name] == null)
                        this.globals.data[this.name] = [];
                    this.globals.data[this.name].content = this.el;
                    this.globals.data[this.name].contentElem = this.contentElem;
                    if (this.parent)
                        this.globals.data[this.name].parent = this.parent;
                    this.globals.initiate(this.name);
                }
            };
        /**
         * @return {?}
         */
        HidenavContentDirective.prototype.ngOnDestroy = /**
         * @return {?}
         */
            function () {
                if (this.name) {
                    delete this.globals.data[this.name].content;
                }
            };
        HidenavContentDirective.decorators = [
            { type: i0.Directive, args: [{
                        selector: '[hidenav-content]'
                    },] }
        ];
        HidenavContentDirective.ctorParameters = function () {
            return [
                { type: angular.IonContent, decorators: [{ type: i0.Host }, { type: i0.Self }, { type: i0.Optional }] },
                { type: i0.ElementRef },
                { type: HidenavService }
            ];
        };
        HidenavContentDirective.propDecorators = {
            hntb: [{ type: i0.Input, args: ['hidenav-tabspage',] }]
        };
        return HidenavContentDirective;
    }());

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    var HidenavHeaderDirective = /** @class */ (function () {
        function HidenavHeaderDirective(el, globals) {
            this.el = el;
            this.globals = globals;
        }
        /**
         * @return {?}
         */
        HidenavHeaderDirective.prototype.ngAfterViewInit = /**
         * @return {?}
         */
            function () {
                var _this = this;
                /** @type {?} */
                var observer = new MutationObserver(( /**
                 * @param {?} mutations
                 * @return {?}
                 */function (mutations) {
                    mutations.forEach(( /**
                     * @return {?}
                     */function () {
                        if (_this.el.nativeElement.getAttribute('hidenav-header').length > 0) {
                            _this.name = _this.el.nativeElement.getAttribute('hidenav-header');
                            _this.start();
                            observer.disconnect();
                        }
                    }));
                }));
                observer.observe(this.el.nativeElement, {
                    attributes: true,
                });
            };
        /**
         * @return {?}
         */
        HidenavHeaderDirective.prototype.start = /**
         * @return {?}
         */
            function () {
                if (this.name) {
                    if (typeof this.globals.data[this.name] == 'undefined' || this.globals.data[this.name] == null)
                        this.globals.data[this.name] = [];
                    if (this.globals.data[this.name].header != null)
                        return false;
                    this.globals.data[this.name].header = this.el;
                    this.globals.initiate(this.name);
                }
            };
        /**
         * @return {?}
         */
        HidenavHeaderDirective.prototype.ngOnDestroy = /**
         * @return {?}
         */
            function () {
                if (this.name) {
                    delete this.globals.data[this.name].header;
                }
            };
        HidenavHeaderDirective.decorators = [
            { type: i0.Directive, args: [{
                        selector: '[hidenav-header]'
                    },] }
        ];
        HidenavHeaderDirective.ctorParameters = function () {
            return [
                { type: i0.ElementRef },
                { type: HidenavService }
            ];
        };
        return HidenavHeaderDirective;
    }());

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    var HidenavShService = /** @class */ (function () {
        function HidenavShService() {
            this.data = [];
            this.mode = 'ios';
            this.names = [];
            this.tabnames = [];
            this.scroll = new rxjs.Subject();
        }
        /**
         * @return {?}
         */
        HidenavShService.prototype.requestName = /**
         * @return {?}
         */
            function () {
                /** @type {?} */
                var name = 'page' + this.names.length;
                this.names.push(name);
                return name;
            };
        /**
         * @param {?} name
         * @return {?}
         */
        HidenavShService.prototype.requestTabName = /**
         * @param {?} name
         * @return {?}
         */
            function (name) {
                if (!this.tabnames[name])
                    this.tabnames[name] = [];
                /** @type {?} */
                var tabname = name + 'tab' + this.tabnames[name].length;
                this.tabnames[name].push(tabname);
                return tabname;
            };
        /**
         * @param {?} name
         * @return {?}
         */
        HidenavShService.prototype.initiate = /**
         * @param {?} name
         * @return {?}
         */
            function (name) {
                var e_1, _a;
                /** @type {?} */
                var names = [];
                for (var key in this.data) {
                    if (this.data[key].parent == name)
                        names.push(key);
                }
                try {
                    for (var names_1 = __values(names), names_1_1 = names_1.next(); !names_1_1.done; names_1_1 = names_1.next()) {
                        var name_1 = names_1_1.value;
                        this.initiate2(name_1);
                    }
                }
                catch (e_1_1) {
                    e_1 = { error: e_1_1 };
                }
                finally {
                    try {
                        if (names_1_1 && !names_1_1.done && (_a = names_1.return))
                            _a.call(names_1);
                    }
                    finally {
                        if (e_1)
                            throw e_1.error;
                    }
                }
                if (names.length == 0)
                    this.initiate2(name);
            };
        /**
         * @param {?} name
         * @return {?}
         */
        HidenavShService.prototype.initiate2 = /**
         * @param {?} name
         * @return {?}
         */
            function (name) {
                if (!(this.data[name] && (this.data[name].parent && this.data[this.data[name].parent] && this.data[this.data[name].parent].tabscontent && this.data[name].content && this.data[this.data[name].parent].header) || (!this.data[name].parent && this.data[name].content && this.data[name].header)))
                    return false;
                /** @type {?} */
                var parent = this.data[name].parent;
                /** @type {?} */
                var content = this.data[name].content;
                if (this.data[name].lastscroll == null)
                    this.data[name].lastscroll = 0;
                if (this.data[name].guardEvents == null)
                    this.data[name].guardEvents = true;
                content.scrollEvents = true;
                if (!parent) {
                    /** @type {?} */
                    var header = this.data[name].header;
                    if (this.data[name].static) {
                        this.data[name].static.forEach(( /**
                         * @param {?} el
                         * @return {?}
                         */function (el) {
                            el.nativeElement.style.position = 'absolute';
                            el.nativeElement.style.zIndex = 102;
                        }));
                    }
                    if (header) {
                        /** @type {?} */
                        var parentElem = header.nativeElement.parentNode;
                        /** @type {?} */
                        var elem = header.nativeElement;
                        if (parentElem.getAttribute('init-expanded') == 'true')
                            this.data[name].initExpanded = true;
                        /** @type {?} */
                        var notchHeight = parseInt(getComputedStyle(document.documentElement).getPropertyValue("--ion-safe-area-top"), 10);
                        this.data[name].shrinkexpandheaderHeight = parseInt(parentElem.getAttribute('header-height'), 10) + notchHeight;
                        this.data[name].opacityFactor = parseInt(parentElem.getAttribute('opacity-factor'), 10);
                        this.data[name].opacityColor = parentElem.getAttribute('opacity-color');
                        this.data[name].blurFactor = parseInt(parentElem.getAttribute('blur-factor'), 10);
                        parentElem.style.height = this.data[name].shrinkexpandheaderHeight + 'px';
                        parentElem.style.overflow = 'hidden';
                        parentElem.style.position = 'absolute';
                        elem.style.position = 'absolute';
                        parentElem.style.width = '100%';
                        elem.style.width = '100%';
                        this.waitforelem(name, 'this.data[name].header.nativeElement.scrollHeight', 'proceedShrinkExpand');
                    }
                }
                else if (parent) {
                    /** @type {?} */
                    var header = this.data[parent].header;
                    /** @type {?} */
                    var tabscontentElem = this.data[parent].tabscontentElem;
                    if (this.data[parent].static) {
                        this.data[parent].static.forEach(( /**
                         * @param {?} el
                         * @return {?}
                         */function (el) {
                            el.nativeElement.style.position = 'absolute';
                            el.nativeElement.style.zIndex = 102;
                        }));
                    }
                    if (header) {
                        /** @type {?} */
                        var supertabsToolbar = tabscontentElem.nativeElement.querySelector('super-tabs-toolbar');
                        /** @type {?} */
                        var parentElem = header.nativeElement.parentNode;
                        /** @type {?} */
                        var elem = header.nativeElement;
                        if (parentElem.getAttribute('init-expanded') == 'true')
                            this.data[name].initExpanded = true;
                        if (parentElem.getAttribute('preserve-header') == 'true') {
                            this.data[name].preserveHeader = true;
                            this.data[parent].preserveHeader = true;
                        }
                        /** @type {?} */
                        var notchHeight = parseInt(getComputedStyle(document.documentElement).getPropertyValue("--ion-safe-area-top"), 10);
                        this.data[name].shrinkexpandheaderHeight = parseInt(parentElem.getAttribute('header-height'), 10) + notchHeight;
                        this.data[name].opacityFactor = parseInt(parentElem.getAttribute('opacity-factor'), 10);
                        this.data[name].opacityColor = elem.getAttribute('opacity-color');
                        this.data[name].blurFactor = parseInt(parentElem.getAttribute('blur-factor'), 10);
                        parentElem.style.height = this.data[name].shrinkexpandheaderHeight + 'px';
                        parentElem.style.overflow = 'hidden';
                        parentElem.style.position = 'absolute';
                        elem.style.position = 'absolute';
                        parentElem.style.width = '100%';
                        elem.style.width = '100%';
                        supertabsToolbar.style.position = 'absolute';
                        supertabsToolbar.style.transform = 'translate3d(0, ' + this.data[name].shrinkexpandheaderHeight + 'px, 0)';
                        parentElem.style.zIndex = 101;
                        this.waitforelemTabs(name, 'this.data[this.data[name].parent].header.nativeElement.scrollHeight', 'this.data[this.data[name].parent].tabscontentElem.nativeElement.querySelector(\'super-tabs-toolbar\').clientHeight', 'proceedShrinkExpandTabs');
                    }
                }
            };
        /**
         * @param {?} name
         * @param {?} evaluate
         * @param {?} func
         * @return {?}
         */
        HidenavShService.prototype.waitforelem = /**
         * @param {?} name
         * @param {?} evaluate
         * @param {?} func
         * @return {?}
         */
            function (name, evaluate, func) {
                /** @type {?} */
                var x = eval(evaluate);
                if (!{ x: x } || x < this.data[name].shrinkexpandheaderHeight) {
                    window.requestAnimationFrame(this.waitforelem.bind(this, name, evaluate, func));
                }
                else {
                    this[func](name);
                }
            };
        /**
         * @param {?} name
         * @param {?} evaluate
         * @param {?} evaluate2
         * @param {?} func
         * @return {?}
         */
        HidenavShService.prototype.waitforelemTabs = /**
         * @param {?} name
         * @param {?} evaluate
         * @param {?} evaluate2
         * @param {?} func
         * @return {?}
         */
            function (name, evaluate, evaluate2, func) {
                /** @type {?} */
                var x = eval(evaluate);
                /** @type {?} */
                var y = eval(evaluate2);
                if (!{ x: x } || x < this.data[name].shrinkexpandheaderHeight || !{ y: y } || y == 0) {
                    window.requestAnimationFrame(this.waitforelemTabs.bind(this, name, evaluate, evaluate2, func));
                }
                else {
                    this[func](name);
                }
            };
        /**
         * @param {?} name
         * @return {?}
         */
        HidenavShService.prototype.proceedShrinkExpand = /**
         * @param {?} name
         * @return {?}
         */
            function (name) {
                var _this = this;
                /** @type {?} */
                var parentElem = this.data[name].header.nativeElement.parentNode;
                /** @type {?} */
                var elem = this.data[name].header.nativeElement;
                /** @type {?} */
                var overlay = this.data[name].header.nativeElement.parentNode.querySelector('.overlay');
                if (this.data[name].opacityColor) {
                    overlay.style.setProperty('--color', this.data[name].opacityColor);
                }
                if (this.data[name].opacityFactor > 0) {
                    //angular decides that opacity is bad and changes it to alpha which doesn't work lol
                    overlay.style.setProperty('filter', 'opacity(var(--opacity))');
                    overlay.style.setProperty('--opacity', this.data[name].opacityFactor / 10);
                }
                if (this.data[name].blurFactor > 0) {
                    elem.style.setProperty('filter', 'blur(var(--blur))');
                    elem.style.setProperty('--blur', this.data[name].blurFactor / 10);
                }
                this.data[name].shrinkexpandHeight = this.data[name].shrinkexpandheaderHeight;
                this.data[name].shrinkexpandHeight = this.data[name].header.nativeElement.scrollHeight;
                elem.style.transform = 'translate3d(0, ' + -((this.data[name].shrinkexpandHeight - this.data[name].shrinkexpandheaderHeight) / 2) + 'px, 0)';
                this.data[name].content.getScrollElement().then(( /**
                 * @param {?} res
                 * @return {?}
                 */function (res) {
                    _this.data[name].contentElem = res;
                    _this.data[name].paddingTop = parseInt(window.getComputedStyle(_this.data[name].contentElem)['padding-top'], 10);
                    _this.data[name].contentElem.style.paddingTop = (_this.data[name].shrinkexpandHeight + _this.data[name].paddingTop) + 'px';
                    //this.data[name].contentElem.style.marginTop = this.data[name].shrinkexpandheaderHeight + 'px';
                    /** @type {?} */
                    var elemPad = document.createElement('div');
                    elemPad.style.cssText = 'background:rgba(0,0,0,0)';
                    /** @type {?} */
                    var x = _this.data[name].contentElem.scrollHeight + (_this.data[name].shrinkexpandHeight - _this.data[name].shrinkexpandheaderHeight);
                    //experimental height
                    elemPad.style.height = x + 'px';
                    setTimeout(( /**
                     * @return {?}
                     */function () {
                        //check if height is still ok and adjust if not
                        _this.data[name].elemPadHeight = Math.max(0, (x - (_this.data[name].contentElem.scrollHeight - _this.data[name].contentElem.offsetHeight) + (_this.data[name].shrinkexpandHeight - _this.data[name].shrinkexpandheaderHeight)));
                        elemPad.style.height = _this.data[name].elemPadHeight + 'px';
                    }), 100);
                    _this.data[name].contentElem.appendChild(elemPad);
                    /** @type {?} */
                    var scrollDist = _this.data[name].initExpanded ? 2 : (_this.data[name].shrinkexpandHeight - _this.data[name].shrinkexpandheaderHeight);
                    _this.data[name].content.scrollByPoint(0, scrollDist, 0).then(( /**
                     * @return {?}
                     */function () {
                        _this.data[name].contentHeight = _this.data[name].contentEl.nativeElement.clientHeight;
                        _this.data[name].content.scrollEvents = true;
                        _this.data[name].content.ionScroll.subscribe(( /**
                         * @param {?} e
                         * @return {?}
                         */function (e) {
                            if (e.detail.scrollTop == 0) {
                                _this.data[name].contentElem.style.paddingTop = 0;
                                _this.data[name].contentEl.nativeElement.style.height = (_this.data[name].contentHeight - _this.data[name].shrinkexpandHeight) + 'px';
                                _this.data[name].contentEl.nativeElement.style.top = (_this.data[name].shrinkexpandHeight + _this.data[name].paddingTop) + 'px';
                                elemPad.style.height = (_this.data[name].elemPadHeight + _this.data[name].shrinkexpandHeight + _this.data[name].paddingTop) + 'px';
                            }
                            else {
                                /** @type {?} */
                                var s = e.detail.scrollTop;
                                _this.data[name].contentElem.style.paddingTop = (_this.data[name].shrinkexpandHeight + _this.data[name].paddingTop) + 'px';
                                _this.data[name].contentEl.nativeElement.style.height = (_this.data[name].contentHeight + _this.data[name].shrinkexpandHeight) + 'px';
                                _this.data[name].contentEl.nativeElement.style.top = null;
                                _this.data[name].contentElem.scrollTop = s;
                                elemPad.style.height = _this.data[name].elemPadHeight + 'px';
                            }
                            if (_this.data[name].initExpanded) {
                                _this.data[name].content.scrollToPoint(0, 0, 0).then(( /**
                                 * @return {?}
                                 */function () {
                                    _this.data[name].initExpanded = false;
                                }));
                            }
                            if (_this.data[name].initExpanded) {
                                _this.data[name].content.scrollToPoint(0, 0, 0).then(( /**
                                 * @return {?}
                                 */function () {
                                    _this.data[name].initExpanded = false;
                                }));
                            }
                            /** @type {?} */
                            var height = Math.max(Math.min(_this.data[name].shrinkexpandHeight, _this.data[name].shrinkexpandHeight - e.detail.scrollTop), _this.data[name].shrinkexpandheaderHeight);
                            elem.style.transform = 'translate3d(0, ' + -(Math.min((_this.data[name].shrinkexpandHeight - _this.data[name].shrinkexpandheaderHeight) / 2, e.detail.scrollTop / 2)) + 'px, 0)';
                            parentElem.style.height = height + 'px';
                            /** @type {?} */
                            var scrollFactor = Math.min(e.detail.scrollTop / (_this.data[name].shrinkexpandHeight / 2), 1);
                            if (scrollFactor >= 0) {
                                /** @type {?} */
                                var currentValOpacity = overlay.style.getPropertyValue('--opacity');
                                /** @type {?} */
                                var newValOpacity = _this.data[name].opacityFactor / 10 * scrollFactor;
                                if (currentValOpacity != newValOpacity)
                                    overlay.style.setProperty('--opacity', newValOpacity);
                                /** @type {?} */
                                var currentValBlur = elem.style.getPropertyValue('--blur');
                                /** @type {?} */
                                var newValBlur = (_this.data[name].blurFactor * scrollFactor) + 'px';
                                if (currentValBlur != newValBlur)
                                    elem.style.setProperty('--blur', newValBlur);
                            }
                            //event emitter
                            setTimeout(( /**
                             * @return {?}
                             */function () {
                                _this.data[name].guardEvents = false;
                            }), 10);
                            if (_this.data[name].lastscroll != height && !_this.data[name].guardEvents) {
                                _this.scroll.next({ name: _this.data[name].parent ? _this.data[name].parent : name, height: height });
                            }
                            _this.data[name].lastscroll = height;
                            //
                        }));
                        //catch the last tick
                        _this.data[name].content.ionScrollEnd.subscribe(( /**
                         * @return {?}
                         */function () {
                            setTimeout(( /**
                             * @return {?}
                             */function () {
                                if (_this.data[name].contentElem.scrollTop == 0) {
                                    _this.data[name].contentElem.style.paddingTop = 0;
                                    _this.data[name].contentEl.nativeElement.style.height = (_this.data[name].contentHeight - _this.data[name].shrinkexpandHeight) + 'px';
                                    _this.data[name].contentEl.nativeElement.style.top = (_this.data[name].shrinkexpandHeight + _this.data[name].paddingTop) + 'px';
                                    elemPad.style.height = (_this.data[name].elemPadHeight + _this.data[name].shrinkexpandHeight + _this.data[name].paddingTop) + 'px';
                                }
                            }), 10);
                        }));
                    }));
                }));
            };
        /**
         * @param {?} name
         * @return {?}
         */
        HidenavShService.prototype.proceedShrinkExpandTabs = /**
         * @param {?} name
         * @return {?}
         */
            function (name) {
                var _this = this;
                /** @type {?} */
                var parent = this.data[name].parent;
                /** @type {?} */
                var parentElem = this.data[parent].header.nativeElement.parentNode;
                /** @type {?} */
                var elem = this.data[parent].header.nativeElement;
                /** @type {?} */
                var tabscontentElem = this.data[parent].tabscontentElem;
                /** @type {?} */
                var supertabsToolbar = tabscontentElem.nativeElement.querySelector('super-tabs-toolbar');
                /** @type {?} */
                var overlay = this.data[parent].header.nativeElement.parentNode.querySelector('.overlay');
                if (this.data[name].opacityColor) {
                    overlay.style.setProperty('--color', this.data[name].opacityColor);
                }
                if (this.data[name].opacityFactor > 0) {
                    //angular decides that opacity is bad and changes it to alpha which doesn't work lol
                    overlay.style.setProperty('filter', 'opacity(var(--opacity))');
                    overlay.style.setProperty('--opacity', this.data[name].opacityFactor / 10);
                }
                if (this.data[name].blurFactor > 0) {
                    elem.style.setProperty('filter', 'blur(var(--blur))');
                    elem.style.setProperty('--blur', this.data[name].blurFactor / 10);
                }
                this.data[name].shrinkexpandHeight = this.data[name].shrinkexpandheaderHeight;
                this.data[name].shrinkexpandHeight = elem.scrollHeight;
                elem.style.transform = 'translate3d(0, ' + -((this.data[name].shrinkexpandHeight - this.data[name].shrinkexpandheaderHeight) / 2) + 'px, 0)';
                this.data[name].content.getScrollElement().then(( /**
                 * @param {?} res
                 * @return {?}
                 */function (res) {
                    _this.data[name].contentElem = res;
                    _this.data[name].paddingTop = parseInt(window.getComputedStyle(_this.data[name].contentElem)['padding-top'], 10);
                    _this.data[name].contentElem.style.paddingTop = (_this.data[name].shrinkexpandHeight + supertabsToolbar.clientHeight + _this.data[name].paddingTop) + 'px';
                    _this.data[name].contentElem.style.height = (_this.data[parent].tabscontentElem.nativeElement.clientHeight) + 'px';
                    //this.data[name].contentElem.style.marginTop = this.data[name].shrinkexpandheaderHeight + 'px';
                    /** @type {?} */
                    var elemPad = document.createElement('div');
                    elemPad.style.cssText = 'background:rgba(0,0,0,0)';
                    /** @type {?} */
                    var x = _this.data[name].contentElem.scrollHeight + (_this.data[name].shrinkexpandHeight - _this.data[name].shrinkexpandheaderHeight);
                    //experimental height
                    elemPad.style.height = x + 'px';
                    setTimeout(( /**
                     * @return {?}
                     */function () {
                        //check if height is still ok and adjust if not
                        _this.data[name].elemPadHeight = Math.max(0, (x - (_this.data[name].contentElem.scrollHeight - _this.data[name].contentElem.offsetHeight) + (_this.data[name].shrinkexpandHeight - _this.data[name].shrinkexpandheaderHeight)));
                        elemPad.style.height = _this.data[name].elemPadHeight + 'px';
                    }), 100);
                    _this.data[name].contentElem.appendChild(elemPad);
                    /** @type {?} */
                    var scrollDist = _this.data[name].initExpanded ? 2 : (_this.data[name].shrinkexpandHeight - _this.data[name].shrinkexpandheaderHeight);
                    _this.data[name].content.scrollByPoint(0, scrollDist, 0).then(( /**
                     * @return {?}
                     */function () {
                        _this.data[name].contentHeight = _this.data[name].contentEl.nativeElement.clientHeight;
                        _this.data[name].content.scrollEvents = true;
                        _this.data[name].content.ionScroll.subscribe(( /**
                         * @param {?} e
                         * @return {?}
                         */function (e) {
                            if (e.detail.scrollTop == 0) {
                                _this.data[name].contentElem.style.paddingTop = 0;
                                _this.data[name].contentEl.nativeElement.style.height = (_this.data[name].contentHeight - (_this.data[name].shrinkexpandHeight + supertabsToolbar.clientHeight)) + 'px';
                                _this.data[name].contentEl.nativeElement.style.top = (_this.data[name].shrinkexpandHeight + supertabsToolbar.clientHeight + _this.data[name].paddingTop) + 'px';
                                elemPad.style.height = (_this.data[name].elemPadHeight + _this.data[name].shrinkexpandHeight + _this.data[name].paddingTop + supertabsToolbar.clientHeight) + 'px';
                            }
                            else {
                                /** @type {?} */
                                var s = e.detail.scrollTop;
                                _this.data[name].contentElem.style.paddingTop = (_this.data[name].shrinkexpandHeight + supertabsToolbar.clientHeight + _this.data[name].paddingTop) + 'px';
                                _this.data[name].contentEl.nativeElement.style.height = (_this.data[name].contentHeight + _this.data[name].shrinkexpandHeight + supertabsToolbar.clientHeight) + 'px';
                                _this.data[name].contentEl.nativeElement.style.top = null;
                                _this.data[name].contentElem.scrollTop = s;
                                elemPad.style.height = _this.data[name].elemPadHeight + 'px';
                            }
                            if (_this.data[name].initExpanded) {
                                _this.data[name].content.scrollToPoint(0, 0, 0).then(( /**
                                 * @return {?}
                                 */function () {
                                    _this.data[name].initExpanded = false;
                                }));
                            }
                            /** @type {?} */
                            var height = Math.max(Math.min(_this.data[name].shrinkexpandHeight, _this.data[name].shrinkexpandHeight - e.detail.scrollTop), _this.data[name].shrinkexpandheaderHeight);
                            elem.style.transform = 'translate3d(0, ' + -(Math.min((_this.data[name].shrinkexpandHeight - _this.data[name].shrinkexpandheaderHeight) / 2, e.detail.scrollTop / 2)) + 'px, 0)';
                            parentElem.style.height = height + 'px';
                            /** @type {?} */
                            var scrollFactor = Math.min(e.detail.scrollTop / (_this.data[name].shrinkexpandHeight / 2), 1);
                            if (scrollFactor >= 0) {
                                /** @type {?} */
                                var currentValOpacity = overlay.style.getPropertyValue('--opacity');
                                /** @type {?} */
                                var newValOpacity = _this.data[name].opacityFactor / 10 * scrollFactor;
                                if (currentValOpacity != newValOpacity)
                                    overlay.style.setProperty('--opacity', newValOpacity);
                                /** @type {?} */
                                var currentValBlur = elem.style.getPropertyValue('--blur');
                                /** @type {?} */
                                var newValBlur = (_this.data[name].blurFactor * scrollFactor) + 'px';
                                if (currentValBlur != newValBlur)
                                    elem.style.setProperty('--blur', newValBlur);
                            }
                            supertabsToolbar.style.transform = 'translate3d(0, ' + height + 'px, 0)';
                            //event emitter
                            setTimeout(( /**
                             * @return {?}
                             */function () {
                                _this.data[name].guardEvents = false;
                            }), 10);
                            if (_this.data[name].lastscroll != height && !_this.data[name].guardEvents) {
                                _this.scroll.next({ name: _this.data[name].parent ? _this.data[name].parent : name, height: height });
                            }
                            _this.data[name].lastscroll = height;
                            //
                        }));
                        //catch the last tick
                        _this.data[name].content.ionScrollEnd.subscribe(( /**
                         * @return {?}
                         */function () {
                            setTimeout(( /**
                             * @return {?}
                             */function () {
                                if (_this.data[name].contentElem.scrollTop == 0) {
                                    _this.data[name].contentElem.style.paddingTop = 0;
                                    _this.data[name].contentEl.nativeElement.style.height = (_this.data[name].contentHeight - (_this.data[name].shrinkexpandHeight + supertabsToolbar.clientHeight)) + 'px';
                                    _this.data[name].contentEl.nativeElement.style.top = (_this.data[name].shrinkexpandHeight + supertabsToolbar.clientHeight + _this.data[name].paddingTop) + 'px';
                                    elemPad.style.height = (_this.data[name].elemPadHeight + _this.data[name].shrinkexpandHeight + _this.data[name].paddingTop + supertabsToolbar.clientHeight) + 'px';
                                }
                            }), 10);
                        }));
                    }));
                }));
            };
        /**
         * @param {?} name
         * @return {?}
         */
        HidenavShService.prototype.resetContent = /**
         * @param {?} name
         * @return {?}
         */
            function (name) {
                if (!this.data[name].preserveHeader) {
                    /** @type {?} */
                    var parent_1 = this.data[name].parent;
                    /** @type {?} */
                    var height = parseInt(this.data[parent_1].header.nativeElement.parentNode.style.height, 10);
                    if (height <= this.data[name].shrinkexpandHeight && height > this.data[name].shrinkexpandheaderHeight || height == this.data[name].shrinkexpandheaderHeight && this.data[name].contentElem.scrollTop < (this.data[name].shrinkexpandHeight - this.data[name].shrinkexpandheaderHeight)) {
                        this.data[name].contentElem.scrollTop = this.data[name].shrinkexpandHeight - height;
                    }
                }
                else {
                    /** @type {?} */
                    var parent_2 = this.data[name].parent;
                    /** @type {?} */
                    var parentElem = this.data[parent_2].header.nativeElement.parentNode;
                    /** @type {?} */
                    var elem = this.data[parent_2].header.nativeElement;
                    /** @type {?} */
                    var tabscontentElem = this.data[parent_2].tabscontentElem;
                    /** @type {?} */
                    var supertabsToolbar = tabscontentElem.nativeElement.querySelector('super-tabs-toolbar');
                    /** @type {?} */
                    var overlay = this.data[parent_2].header.nativeElement.parentNode.querySelector('.overlay');
                    /** @type {?} */
                    var height = Math.max(Math.min(this.data[name].shrinkexpandHeight, this.data[name].shrinkexpandHeight - this.data[name].contentElem.scrollTop), this.data[name].shrinkexpandheaderHeight);
                    elem.style.transform = 'translate3d(0, ' + -(Math.min((this.data[name].shrinkexpandHeight - this.data[name].shrinkexpandheaderHeight) / 2, this.data[name].contentElem.scrollTop / 2)) + 'px, 0)';
                    parentElem.style.height = height + 'px';
                    overlay.style.setProperty('--opacity', this.data[name].opacityFactor / 10 * Math.min(this.data[name].contentElem.scrollTop / (this.data[name].shrinkexpandHeight / 2), 1));
                    elem.style.setProperty('--blur', (this.data[name].blurFactor * Math.min(this.data[name].contentElem.scrollTop / (this.data[name].shrinkexpandHeight / 2), 1)) + 'px');
                    supertabsToolbar.style.transform = 'translate3d(0, ' + height + 'px, 0)';
                    this.scroll.next({ name: this.data[name].parent, height: height });
                }
            };
        /**
         * @param {?} parent
         * @return {?}
         */
        HidenavShService.prototype.findCurrentTab = /**
         * @param {?} parent
         * @return {?}
         */
            function (parent) {
                var e_2, _a;
                /** @type {?} */
                var i = this.data[parent].supertabs.activeTabIndex;
                /** @type {?} */
                var tabs = this.data[parent].tabscontentElem.nativeElement.querySelectorAll('super-tab');
                /** @type {?} */
                var results = [];
                try {
                    for (var tabs_1 = __values(tabs), tabs_1_1 = tabs_1.next(); !tabs_1_1.done; tabs_1_1 = tabs_1.next()) {
                        var tab = tabs_1_1.value;
                        /** @type {?} */
                        var cont = tab.querySelector('ion-content');
                        if (cont.attributes['hidenav-sh-content'])
                            results.push(cont.attributes['hidenav-sh-content'].nodeValue);
                        else
                            results.push(null);
                    }
                }
                catch (e_2_1) {
                    e_2 = { error: e_2_1 };
                }
                finally {
                    try {
                        if (tabs_1_1 && !tabs_1_1.done && (_a = tabs_1.return))
                            _a.call(tabs_1);
                    }
                    finally {
                        if (e_2)
                            throw e_2.error;
                    }
                }
                if (results[i] != null) {
                    return results[i];
                }
                return null;
            };
        /**
         * @param {?} parent
         * @param {?=} duration
         * @return {?}
         */
        HidenavShService.prototype.expand = /**
         * @param {?} parent
         * @param {?=} duration
         * @return {?}
         */
            function (parent, duration) {
                if (duration === void 0) {
                    duration = 200;
                }
                var e_3, _a;
                if (this.data[parent].content) {
                    this.data[parent].content.scrollToPoint(0, 0, duration);
                }
                else {
                    if (!this.data[parent].preserveHeader) {
                        /** @type {?} */
                        var names = [];
                        for (var key in this.data) {
                            if (this.data[key].parent == parent)
                                names.push(key);
                        }
                        try {
                            for (var names_2 = __values(names), names_2_1 = names_2.next(); !names_2_1.done; names_2_1 = names_2.next()) {
                                var name_2 = names_2_1.value;
                                this.data[name_2].content.scrollToPoint(0, 0, duration);
                            }
                        }
                        catch (e_3_1) {
                            e_3 = { error: e_3_1 };
                        }
                        finally {
                            try {
                                if (names_2_1 && !names_2_1.done && (_a = names_2.return))
                                    _a.call(names_2);
                            }
                            finally {
                                if (e_3)
                                    throw e_3.error;
                            }
                        }
                    }
                    else {
                        /** @type {?} */
                        var currentTab = this.findCurrentTab(parent);
                        this.data[currentTab].content.scrollToPoint(0, 0, duration);
                    }
                }
            };
        /**
         * @param {?} parent
         * @param {?=} duration
         * @return {?}
         */
        HidenavShService.prototype.shrink = /**
         * @param {?} parent
         * @param {?=} duration
         * @return {?}
         */
            function (parent, duration) {
                if (duration === void 0) {
                    duration = 200;
                }
                var e_4, _a;
                /** @type {?} */
                var height = parseInt(this.data[parent].header.nativeElement.parentNode.style.height, 10);
                if (height > this.data[parent].shrinkexpandheaderHeight) {
                    if (this.data[parent].content) {
                        this.data[parent].content.scrollToPoint(0, (this.data[parent].shrinkexpandHeight - this.data[parent].shrinkexpandheaderHeight), duration);
                    }
                    else {
                        if (!this.data[parent].preserveHeader) {
                            /** @type {?} */
                            var names = [];
                            for (var key in this.data) {
                                if (this.data[key].parent == parent)
                                    names.push(key);
                            }
                            try {
                                for (var names_3 = __values(names), names_3_1 = names_3.next(); !names_3_1.done; names_3_1 = names_3.next()) {
                                    var name_3 = names_3_1.value;
                                    this.data[name_3].content.scrollToPoint(0, (this.data[name_3].shrinkexpandHeight - this.data[name_3].shrinkexpandheaderHeight), duration);
                                }
                            }
                            catch (e_4_1) {
                                e_4 = { error: e_4_1 };
                            }
                            finally {
                                try {
                                    if (names_3_1 && !names_3_1.done && (_a = names_3.return))
                                        _a.call(names_3);
                                }
                                finally {
                                    if (e_4)
                                        throw e_4.error;
                                }
                            }
                        }
                        else {
                            /** @type {?} */
                            var currentTab = this.findCurrentTab(parent);
                            this.data[currentTab].content.scrollToPoint(0, (this.data[currentTab].shrinkexpandHeight - this.data[currentTab].shrinkexpandheaderHeight), duration);
                        }
                    }
                }
            };
        /**
         * @param {?} parent
         * @param {?=} duration
         * @return {?}
         */
        HidenavShService.prototype.toggle = /**
         * @param {?} parent
         * @param {?=} duration
         * @return {?}
         */
            function (parent, duration) {
                if (duration === void 0) {
                    duration = 200;
                }
                var e_5, _a;
                if (this.data[parent].content) {
                    /** @type {?} */
                    var height = parseInt(this.data[parent].header.nativeElement.parentNode.style.height, 10);
                    if (height < this.data[parent].shrinkexpandHeight)
                        this.data[parent].content.scrollToPoint(0, 0, duration);
                    else
                        this.data[parent].content.scrollToPoint(0, (this.data[parent].shrinkexpandHeight - this.data[parent].shrinkexpandheaderHeight), duration);
                }
                else {
                    if (!this.data[parent].preserveHeader) {
                        /** @type {?} */
                        var names = [];
                        for (var key in this.data) {
                            if (this.data[key].parent == parent)
                                names.push(key);
                        }
                        /** @type {?} */
                        var height = parseInt(this.data[parent].header.nativeElement.parentNode.style.height, 10);
                        try {
                            for (var names_4 = __values(names), names_4_1 = names_4.next(); !names_4_1.done; names_4_1 = names_4.next()) {
                                var name_4 = names_4_1.value;
                                if (height < this.data[name_4].shrinkexpandHeight)
                                    this.data[name_4].content.scrollToPoint(0, 0, duration);
                                else
                                    this.data[name_4].content.scrollToPoint(0, (this.data[name_4].shrinkexpandHeight - this.data[name_4].shrinkexpandheaderHeight), duration);
                            }
                        }
                        catch (e_5_1) {
                            e_5 = { error: e_5_1 };
                        }
                        finally {
                            try {
                                if (names_4_1 && !names_4_1.done && (_a = names_4.return))
                                    _a.call(names_4);
                            }
                            finally {
                                if (e_5)
                                    throw e_5.error;
                            }
                        }
                    }
                    else {
                        /** @type {?} */
                        var currentTab = this.findCurrentTab(parent);
                        /** @type {?} */
                        var height = parseInt(this.data[parent].header.nativeElement.parentNode.style.height, 10);
                        if (height < this.data[currentTab].shrinkexpandHeight)
                            this.data[currentTab].content.scrollToPoint(0, 0, duration);
                        else
                            this.data[currentTab].content.scrollToPoint(0, (this.data[currentTab].shrinkexpandHeight - this.data[currentTab].shrinkexpandheaderHeight), duration);
                    }
                }
            };
        HidenavShService.decorators = [
            { type: i0.Injectable, args: [{
                        providedIn: 'root'
                    },] }
        ];
        HidenavShService.ctorParameters = function () { return []; };
        /** @nocollapse */ HidenavShService.ngInjectableDef = i0.defineInjectable({ factory: function HidenavShService_Factory() { return new HidenavShService(); }, token: HidenavShService, providedIn: "root" });
        return HidenavShService;
    }());

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    var HidenavStretchheaderComponent = /** @class */ (function () {
        function HidenavStretchheaderComponent(el, globals) {
            this.el = el;
            this.globals = globals;
            this.scroll = new i0.EventEmitter();
        }
        /**
         * @return {?}
         */
        HidenavStretchheaderComponent.prototype.ngOnInit = /**
         * @return {?}
         */
            function () {
            };
        /**
         * @return {?}
         */
        HidenavStretchheaderComponent.prototype.ngAfterViewInit = /**
         * @return {?}
         */
            function () {
                var _this = this;
                /** @type {?} */
                var observer = new MutationObserver(( /**
                 * @param {?} mutations
                 * @return {?}
                 */function (mutations) {
                    mutations.forEach(( /**
                     * @return {?}
                     */function () {
                        if (_this.el.nativeElement.getAttribute('hidenav-sh-header').length > 0) {
                            _this.name = _this.el.nativeElement.getAttribute('hidenav-sh-header');
                            _this.start();
                            observer.disconnect();
                        }
                    }));
                }));
                observer.observe(this.el.nativeElement, {
                    attributes: true,
                });
            };
        /**
         * @return {?}
         */
        HidenavStretchheaderComponent.prototype.start = /**
         * @return {?}
         */
            function () {
                var _this = this;
                if (this.name) {
                    if (typeof this.globals.data[this.name] == 'undefined' || this.globals.data[this.name] == null)
                        this.globals.data[this.name] = [];
                    this.globals.data[this.name].header = this.header;
                    this.globals.data[this.name].static = this.static;
                    this.globals.initiate(this.name);
                    this.globals.scroll.subscribe(( /**
                     * @param {?} res
                     * @return {?}
                     */function (res) {
                        if (res.name == _this.name) {
                            _this.scroll.emit(res.height);
                        }
                    }));
                    if (this.noBorder != 'true') {
                        /** @type {?} */
                        var mode_1 = document.querySelector('html').getAttribute('mode');
                        setTimeout(( /**
                         * @return {?}
                         */function () {
                            if (typeof _this.class == 'undefined') {
                                _this.class = mode_1;
                            }
                            else {
                                _this.class += ' ' + mode_1;
                            }
                        }), 0);
                    }
                }
            };
        /**
         * @param {?=} duration
         * @return {?}
         */
        HidenavStretchheaderComponent.prototype.expand = /**
         * @param {?=} duration
         * @return {?}
         */
            function (duration) {
                if (duration === void 0) {
                    duration = 200;
                }
                this.globals.expand(this.name, duration);
            };
        /**
         * @param {?=} duration
         * @return {?}
         */
        HidenavStretchheaderComponent.prototype.shrink = /**
         * @param {?=} duration
         * @return {?}
         */
            function (duration) {
                if (duration === void 0) {
                    duration = 200;
                }
                this.globals.shrink(this.name, duration);
            };
        /**
         * @param {?=} duration
         * @return {?}
         */
        HidenavStretchheaderComponent.prototype.toggle = /**
         * @param {?=} duration
         * @return {?}
         */
            function (duration) {
                if (duration === void 0) {
                    duration = 200;
                }
                this.globals.toggle(this.name, duration);
            };
        /**
         * @return {?}
         */
        HidenavStretchheaderComponent.prototype.ngOnDestroy = /**
         * @return {?}
         */
            function () {
                if (this.name) {
                    delete this.globals.data[this.name].header;
                }
            };
        HidenavStretchheaderComponent.decorators = [
            { type: i0.Component, args: [{
                        selector: 'hidenav-stretchheader',
                        template: "\n        <style>\n            .overlay {\n                position: absolute;\n                height: inherit;\n                width: inherit;\n                z-index: 101;\n                pointer-events: none;\n                /*opacity: var(--opacity);*/\n                background: var(--color);\n                filter: opacity(0);\n                --opacity: 0;\n                --color: black;\n            }\n\n            :host {\n                --blur: 0;\n                z-index: 1;\n            }\n\n            :host.md {\n                -webkit-box-shadow: 0px 2px 5px 0px rgba(0, 0, 0, 0.53);\n                -moz-box-shadow: 0px 2px 5px 0px rgba(0, 0, 0, 0.53);\n                box-shadow: 0px 2px 5px 0px rgba(0, 0, 0, 0.53);\n            }\n\n            :host.ios {\n                border-bottom: 1px solid #5a5e63;\n            }\n        </style>\n        <div class=\"overlay\"></div>\n        <ng-content></ng-content>\n    "
                    }] }
        ];
        HidenavStretchheaderComponent.ctorParameters = function () {
            return [
                { type: i0.ElementRef },
                { type: HidenavShService }
            ];
        };
        HidenavStretchheaderComponent.propDecorators = {
            header: [{ type: i0.ContentChild, args: ['shrinkexpand', { read: i0.ElementRef },] }],
            static: [{ type: i0.ContentChildren, args: ['static', { read: i0.ElementRef },] }],
            class: [{ type: i0.HostBinding, args: ['class',] }],
            noBorder: [{ type: i0.Input, args: ['no-border',] }],
            headerHeight: [{ type: i0.Input, args: ['header-height',] }],
            initExpanded: [{ type: i0.Input, args: ['init-expanded',] }],
            opacityColor: [{ type: i0.Input, args: ['opacity-color',] }],
            opacityFactor: [{ type: i0.Input, args: ['opacity-factor',] }],
            blurFactor: [{ type: i0.Input, args: ['blur-factor',] }],
            preserveHeader: [{ type: i0.Input, args: ['preserve-header',] }],
            scroll: [{ type: i0.Output }]
        };
        return HidenavStretchheaderComponent;
    }());

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    var HidenavShContentDirective = /** @class */ (function () {
        function HidenavShContentDirective(el, contentElem, globals) {
            this.el = el;
            this.contentElem = contentElem;
            this.globals = globals;
        }
        /**
         * @return {?}
         */
        HidenavShContentDirective.prototype.ngAfterViewInit = /**
         * @return {?}
         */
            function () {
                var _this = this;
                if (!this.contentElem.nativeElement.hasAttribute('hidenav-tabspage')) {
                    this.name = this.globals.requestName();
                    $(this.contentElem.nativeElement).attr('hidenav-sh-content', this.name);
                    $('hidenav-stretchheader', $(this.contentElem.nativeElement).parents().get().find(( /**
                     * @param {?} itm
                     * @return {?}
                     */function (itm) { return $(itm).find('[hidenav-header]').length; }))).attr('hidenav-sh-header', this.name);
                    this.start();
                }
                else {
                    /** @type {?} */
                    var counter_1 = 0;
                    /** @type {?} */
                    var int_1 = setInterval(( /**
                     * @return {?}
                     */function () {
                        /** @type {?} */
                        var x = $(_this.contentElem.nativeElement).closest('[hidenav-sh-tabscontent]').attr('hidenav-sh-tabscontent');
                        counter_1++;
                        if (x && x.length > 0) {
                            _this.parent = $(_this.contentElem.nativeElement).closest('[hidenav-sh-tabscontent]').attr('hidenav-sh-tabscontent');
                            _this.name = _this.globals.requestTabName(_this.parent);
                            $(_this.contentElem.nativeElement).attr('hidenav-sh-content', _this.name);
                            $(_this.contentElem.nativeElement).attr('hidenav-tabspage', _this.parent);
                            _this.start();
                            clearInterval(int_1);
                        }
                        else if (counter_1 > 50) {
                            clearInterval(int_1);
                        }
                    }), 50);
                }
            };
        /**
         * @return {?}
         */
        HidenavShContentDirective.prototype.start = /**
         * @return {?}
         */
            function () {
                if (this.name) {
                    if (typeof this.globals.data[this.name] == 'undefined' || this.globals.data[this.name] == null)
                        this.globals.data[this.name] = [];
                    this.globals.data[this.name].content = this.el;
                    this.globals.data[this.name].contentEl = this.contentElem;
                    if (this.parent)
                        this.globals.data[this.name].parent = this.parent;
                    this.globals.initiate(this.name);
                }
            };
        /**
         * @return {?}
         */
        HidenavShContentDirective.prototype.ngOnDestroy = /**
         * @return {?}
         */
            function () {
                if (this.name) {
                    delete this.globals.data[this.name].content;
                }
            };
        HidenavShContentDirective.decorators = [
            { type: i0.Directive, args: [{
                        selector: '[hidenav-sh-content]'
                    },] }
        ];
        HidenavShContentDirective.ctorParameters = function () {
            return [
                { type: angular.IonContent, decorators: [{ type: i0.Host }, { type: i0.Self }, { type: i0.Optional }] },
                { type: i0.ElementRef },
                { type: HidenavShService }
            ];
        };
        HidenavShContentDirective.propDecorators = {
            hntb: [{ type: i0.Input, args: ['hidenav-tabspage',] }]
        };
        return HidenavShContentDirective;
    }());

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    var HidenavShTabscontentDirective = /** @class */ (function () {
        function HidenavShTabscontentDirective(contentElem, el, globals) {
            this.contentElem = contentElem;
            this.el = el;
            this.globals = globals;
        }
        /**
         * @return {?}
         */
        HidenavShTabscontentDirective.prototype.ngAfterViewInit = /**
         * @return {?}
         */
            function () {
                var _this = this;
                this.name = this.globals.requestName();
                this.contentElem.nativeElement.setAttribute('hidenav-sh-tabscontent', this.name);
                $('hidenav-stretchheader', $(this.contentElem.nativeElement).parents().get().find(( /**
                 * @param {?} itm
                 * @return {?}
                 */function (itm) { return $(itm).find('[hidenav-stretchheader]').length; }))).attr('hidenav-sh-header', this.name);
                if (this.name) {
                    if (typeof this.globals.data[this.name] == 'undefined' || this.globals.data[this.name] == null)
                        this.globals.data[this.name] = [];
                    this.globals.data[this.name].tabscontent = this.el;
                    this.globals.data[this.name].tabscontentElem = this.contentElem;
                    this.globals.data[this.name].supertabs = this.supertabs;
                    this.globals.initiate(this.name);
                    this.supertabs.tabChange.subscribe(( /**
                     * @param {?} e
                     * @return {?}
                     */function (e) {
                        var e_1, _a;
                        /** @type {?} */
                        var i = e.detail.index;
                        /** @type {?} */
                        var tabs = _this.contentElem.nativeElement.querySelectorAll('super-tab');
                        /** @type {?} */
                        var results = [];
                        try {
                            for (var tabs_1 = __values(tabs), tabs_1_1 = tabs_1.next(); !tabs_1_1.done; tabs_1_1 = tabs_1.next()) {
                                var tab = tabs_1_1.value;
                                /** @type {?} */
                                var cont = tab.querySelector('ion-content');
                                if (cont != null && typeof cont.attributes['hidenav-sh-content'] != 'undefined' && cont.attributes['hidenav-sh-content'].nodeValue != '')
                                    results.push(cont.attributes['hidenav-sh-content'].nodeValue);
                                else
                                    results.push(null);
                            }
                        }
                        catch (e_1_1) {
                            e_1 = { error: e_1_1 };
                        }
                        finally {
                            try {
                                if (tabs_1_1 && !tabs_1_1.done && (_a = tabs_1.return))
                                    _a.call(tabs_1);
                            }
                            finally {
                                if (e_1)
                                    throw e_1.error;
                            }
                        }
                        if (results[i] != null) {
                            _this.globals.resetContent(results[i]);
                        }
                    }));
                }
            };
        /**
         * @return {?}
         */
        HidenavShTabscontentDirective.prototype.ngOnDestroy = /**
         * @return {?}
         */
            function () {
                delete this.globals.data[this.name].tabscontent;
            };
        HidenavShTabscontentDirective.decorators = [
            { type: i0.Directive, args: [{
                        selector: '[hidenav-sh-tabscontent]'
                    },] }
        ];
        HidenavShTabscontentDirective.ctorParameters = function () {
            return [
                { type: i0.ElementRef },
                { type: angular.IonContent, decorators: [{ type: i0.Host }, { type: i0.Self }, { type: i0.Optional }] },
                { type: HidenavShService }
            ];
        };
        HidenavShTabscontentDirective.propDecorators = {
            supertabs: [{ type: i0.ContentChild, args: [angular$1.SuperTabs,] }]
        };
        return HidenavShTabscontentDirective;
    }());

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    var HidenavModule = /** @class */ (function () {
        function HidenavModule() {
        }
        HidenavModule.decorators = [
            { type: i0.NgModule, args: [{
                        imports: [
                            common.CommonModule
                        ],
                        declarations: [
                            HidenavTabscontentDirective,
                            HidenavContentDirective,
                            HidenavHeaderDirective,
                            HidenavStretchheaderComponent,
                            HidenavShContentDirective,
                            HidenavShTabscontentDirective
                        ],
                        exports: [
                            HidenavTabscontentDirective,
                            HidenavContentDirective,
                            HidenavHeaderDirective,
                            HidenavStretchheaderComponent,
                            HidenavShContentDirective,
                            HidenavShTabscontentDirective
                        ]
                    },] }
        ];
        return HidenavModule;
    }());

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */

    exports.HidenavModule = HidenavModule;
    exports.HidenavContentDirective = HidenavContentDirective;
    exports.HidenavHeaderDirective = HidenavHeaderDirective;
    exports.HidenavService = HidenavService;
    exports.HidenavShContentDirective = HidenavShContentDirective;
    exports.HidenavShService = HidenavShService;
    exports.HidenavShTabscontentDirective = HidenavShTabscontentDirective;
    exports.HidenavStretchheaderComponent = HidenavStretchheaderComponent;
    exports.HidenavTabscontentDirective = HidenavTabscontentDirective;

    Object.defineProperty(exports, '__esModule', { value: true });

})));

//# sourceMappingURL=ionic4-hidenav.umd.js.map